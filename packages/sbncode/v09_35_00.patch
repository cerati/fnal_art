diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3a890cc..702d4a4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-# ======================================================================
+#======================================================================
 #  larsoft main build file
 #
 #  cd .../path/to/build/directory
@@ -11,18 +11,15 @@
 #  make install
 #  make package (builds distribution tarfile)
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
 
-cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
+find_package(cetmodules 2.29.07 REQUIRED)
 project(sbncode VERSION 09.35.00 LANGUAGES CXX)
 
 message(STATUS "\n\n  ==========================   ${PROJECT_NAME}   ==========================")
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
-
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules )
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -38,45 +35,49 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
   ALLOW_DEPRECATIONS
   EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs -Wno-undefined-var-template
 )
-
-cet_report_compiler_flags()
+set(fcl_dir caf)
+cet_report_compiler_flags(REPORT_THRESHOLD VERBOSE)
 
 # these are minimum required versions, not the actual product versions
-find_ups_product(art)
-find_ups_product(messagefacility)
-find_ups_product(art_root_io)
-find_ups_product(gsl)
-find_ups_product(nusimdata)
-find_ups_product(nug4)
-find_ups_product(nugen)
-find_ups_product(nurandom)
-find_ups_product(nutools)
-find_ups_product(genie)
-find_ups_product(lardataobj)
-find_ups_product(larcoreobj)
-find_ups_product(larcorealg)
-find_ups_product(lardataalg)
-find_ups_product(larcore)
-find_ups_product(lardata)
-find_ups_product(larevt)
-find_ups_product(larsim)
-find_ups_product(larreco)
-find_ups_product(larpandora)
-find_ups_product(larsoft v09_00_00)
-find_ups_product(artdaq_core v3_06_01)
-find_ups_product(ifbeam)
-find_ups_product(ifbeam_art)
-find_ups_product(libwda) 
-find_ups_product(sbnobj v09_10_00)
-find_ups_product(sbndata v01_00)
-find_ups_product(ifdhc)
-find_ups_product(ifdh_art)
-find_ups_product(log4cpp)
-find_ups_boost()
-find_ups_root()
-#find_ups_product(sbndcode v06_67_00)
-#find_ups_product(uboonecode v06_67_00)
-find_ups_product( sbndaq_artdaq_core )
+find_package(art) 
+find_package(messagefacility) 
+find_package(art_root_io) 
+find_package(nusimdata) 
+find_package(nug4) 
+find_package(nugen) 
+find_package(nurandom) 
+find_package(nutools) 
+find_package(GENIE) 
+find_package(lardataobj) 
+find_package(larcoreobj) 
+find_package(larcorealg) 
+find_package(lardataalg) 
+find_package(larcore) 
+find_package(lardata) 
+find_package(larevt) 
+find_package(larsim) 
+find_package(larreco) 
+find_package(larpandora) 
+find_package(larpandoracontent) 
+find_package(artdaq_core ) 
+find_package(sbnobj ) 
+find_package(sbnanaobj )
+find_package(sbndaq_artdaq_core )
+find_package(sbndata) 
+find_package(ifdhc) 
+find_package(ifdh_art) 
+find_package(ifbeam)
+find_package(ifbeam_art)
+find_package( trace )
+find_package( libwda )
+
+find_package(CLHEP COMPONENTS ALL)
+find_package(ROOT REQUIRED)
+find_package(Geant4)
+find_package(Boost COMPONENTS system)
+find_library( GSL NAMES gsl )
+find_library( LOG4CPP NAMES log4cpp )
+find_library( XML2 NAMES xml2 )
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -84,8 +85,7 @@ include(ArtMake)
 include(BuildPlugins)
 
 add_subdirectory(sbncode)
-add_subdirectory(ups)
 add_subdirectory(fcl)
 
 # packaging utility
-include(UseCPack)
+cet_cmake_config()
diff --git a/sbncode/BeamSpillInfoRetriever/BNBRetriever/BNBRetriever_module.cc b/sbncode/BeamSpillInfoRetriever/BNBRetriever/BNBRetriever_module.cc
index 9e954f1..23aee48 100644
--- a/sbncode/BeamSpillInfoRetriever/BNBRetriever/BNBRetriever_module.cc
+++ b/sbncode/BeamSpillInfoRetriever/BNBRetriever/BNBRetriever_module.cc
@@ -24,7 +24,7 @@
 
 #include "sbnobj/Common/POTAccounting/BNBSpillInfo.h"
 
-#include "IFBeam_service.h"
+#include "ifdh_art/IFBeamService/IFBeam_service.h"
 #include "ifbeam_c.h"
 #include "MWRData.h"
 
diff --git a/sbncode/BeamSpillInfoRetriever/BNBRetriever/CMakeLists.txt b/sbncode/BeamSpillInfoRetriever/BNBRetriever/CMakeLists.txt
index 99ec10d..5e392b0 100644
--- a/sbncode/BeamSpillInfoRetriever/BNBRetriever/CMakeLists.txt
+++ b/sbncode/BeamSpillInfoRetriever/BNBRetriever/CMakeLists.txt
@@ -1,16 +1,18 @@
-find_ups_product(ifbeam)
-find_ups_product(ifbeam_art)
+find_package(ifbeam)
+find_package(ifbeam_art)
 
-include_directories( $ENV{IFBEAM_FQ_DIR}/include )
-include_directories( $ENV{LIBWDA_FQ_DIR}/include )
-include_directories( $ENV{IFDHC_FQ_DIR}/inc )
-include_directories( $ENV{IFDH_ART_INC} )
-cet_find_library( IFBEAMSERVICE        NAMES IFBeam_service    PATHS ENV IFDH_ART_LIB NO_DEFAULT_PATH )
-cet_find_library( IFBEAM               NAMES ifbeam            PATHS ENV IFBEAM_LIB   NO_DEFAULT_PATH )
+include_directories( $ENV{IFBEAM_DIR}/include )
+include_directories( $ENV{LIBWDA_DIR}/include )
+link_directories( $ENV{LIBWDA_DIR}/lib )
+include_directories( $ENV{IFDHC_DIR}/inc )
+link_directories( $ENV{IFDHC_DIR}/lib )
+include_directories( $ENV{IFDH_ART_DIR}/include )
+include_directories( $ENV{TRACE_INC} )
+find_library( IFBEAM               NAMES ifbeam            PATHS $ENV{IFBEAM_DIR} )
 
 link_libraries( ${LIB_NAME} -L$ENV{BOOST_LIB} -lboost_system ${ROOTLIB} )
 
-art_make_library(
+cet_make_library(LIBRARIES Boost::system
 	LIBRARY_NAME sbn_BNBSpillInfoRetriever_MWRData
 	SOURCE MWRData.cpp
 )
@@ -21,28 +23,27 @@ simple_plugin(BNBRetriever module
 	${ART_FRAMEWORK_SERVICES_REGISTRY}
 	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
 	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
-	${ROOT_X3d}
+	ROOT::X3d
 	${ROOT_BASIC_LIB_LIST}
         ${Boost_PROGRAM_OPTIONS_LIBRARY} ${Boost_FILESYSTEM_LIBRARY} ${Boost_DATE_TIME_LIBRARY} ${Boost_SERIALIZATION_LIBRARY}
-        ${Boost_SYSTEM_LIBRARY}
-	MF_MessageLogger
-       	sbnobj_Common_POTAccounting
-	#${IFBEAMSERVICE}
-	#${IFBEAM}
-	ifbeam
-	ifdh_art::IFBeam_service
+        Boost::system
+	messagefacility::MF_MessageLogger
+	ifbeam::ifbeam
+        ifdh_art::IFBeam_service
 	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
   	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays
 	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS	
         artdaq_core::artdaq-core_Utilities
-	sbn_BNBSpillInfoRetriever_MWRData	
+	sbn_BNBSpillInfoRetriever_MWRData
+        sbnobj::Common_POTAccounting
+        larcorealg::CoreUtils	
 )
 
 install_headers()
diff --git a/sbncode/BeamSpillInfoRetriever/EXTRetriever/CMakeLists.txt b/sbncode/BeamSpillInfoRetriever/EXTRetriever/CMakeLists.txt
index 4a3ceaf..12a9289 100644
--- a/sbncode/BeamSpillInfoRetriever/EXTRetriever/CMakeLists.txt
+++ b/sbncode/BeamSpillInfoRetriever/EXTRetriever/CMakeLists.txt
@@ -1,24 +1,27 @@
 
-include_directories( $ENV{IFBEAM_FQ_DIR}/include )
-include_directories( $ENV{LIBWDA_FQ_DIR}/include )
-include_directories( $ENV{IFDHC_FQ_DIR}/inc )
-include_directories( $ENV{IFDH_ART_INC} )
+include_directories( $ENV{IFBEAM_DIR}/include )
+include_directories( $ENV{LIBWDA_DIR}/include )
+include_directories( $ENV{IFDHC_DIR}/inc )
+include_directories( $ENV{IFDH_ART_DIR}/include )
+include_directories( $ENV{TRACE_INC} )
 
 simple_plugin(EXTRetriever module
 	${ART_FRAMEWORK_CORE}
 	${ART_FRAMEWORK_SERVICES_REGISTRY}
 	${ART_FRAMEWORK_SERVICES}
 	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${FHICLCPP}
-	cetlib cetlib_except
-	MF_MessageLogger
-       	sbnobj_Common_POTAccounting
+	cetlib::cetlib cetlib_except::cetlib_except
+	messagefacility::MF_MessageLogger
+       	sbnobj::Common_POTAccounting
 	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
   	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays
 	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS	
         artdaq_core::artdaq-core_Utilities
+        lardata::Utilities
+        larcore::Geometry_AuxDetGeometry_service
 )
 
 install_headers()
diff --git a/sbncode/CAFMaker/CAFMaker_module.cc b/sbncode/CAFMaker/CAFMaker_module.cc
index fd8e3c3..dbb6533 100644
--- a/sbncode/CAFMaker/CAFMaker_module.cc
+++ b/sbncode/CAFMaker/CAFMaker_module.cc
@@ -37,7 +37,7 @@
 #include <libgen.h>
 #endif
 
-#include <IFDH_service.h>
+#include "ifdh_art/IFDHService/IFDH_service.h"
 
 // ROOT includes
 #include "TFile.h"
diff --git a/sbncode/CAFMaker/CMakeLists.txt b/sbncode/CAFMaker/CMakeLists.txt
index f33e6a6..2261fda 100644
--- a/sbncode/CAFMaker/CMakeLists.txt
+++ b/sbncode/CAFMaker/CMakeLists.txt
@@ -1,83 +1,83 @@
 # for classes_def.xml
-include_directories ( ${CMAKE_CURRENT_SOURCE_DIR} )
+include_directories ( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 #set( PACKAGE CAFMaker )
 FILE( GLOB src_files *.cxx )
 
 add_subdirectory(RecoUtils)
 add_subdirectory(bin)
 
-art_make_library( LIBRARY_NAME sbncode_CAFMaker
+art_make_library( LIBRARY_NAME sbncode::CAFMaker
                   SOURCE ${src_files}
                   LIBRARIES
-                  sbnanaobj_StandardRecord
-                  ${ART_FRAMEWORK_CORE}
-                  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                  ${ART_FRAMEWORK_SERVICES}
-                  ${ART_FRAMEWORK_PRINCIPAL}
-                  art_Persistency_Common
-                  art_Utilities canvas
+                  ifdh_art::IFDH_service
+                  sbnanaobj::StandardRecord
+                  art::Framework_Core
+                  art::Framework_Services_Registry
+                  art_root_io::TFileService_service
+                  art::Framework_Principal
+                  art::Persistency_Common
+                  art::Utilities canvas::canvas
                   ${MF_MESSAGELOGGER}
                   ${MF_UTILITIES}
                   ${FHICLCPP}
-                  cetlib cetlib_except
+                  cetlib::cetlib cetlib_except::cetlib_except
                   ${ROOT_EVE_LIB_LIST}
-                  ${ROOT_X3d}
-                  ${ROOT_BASIC_LIB_LIST}
+                  ROOT::X3d
+                  ROOT::EG
                   caf_RecoUtils
-                  lardataobj_AnalysisBase
-                  lardataobj_RecoBase
-                  larcorealg_Geometry
-                  larcore_Geometry_Geometry_service
-                  larcorealg_GeoAlgo
-                  larsim_MCCheater_BackTrackerService_service
-                  nusimdata_SimulationBase
-                  larsim_MCCheater_ParticleInventoryService_service
-                  sbnobj_Common_CRT
-                  sbnobj_Common_Reco
-                  sbnobj_Common_Analysis
-		  lardataalg_DetectorInfo
-                  art_Framework_Services_System_TriggerNamesService_service
-                  sbncode_Metadata_MetadataSBN_service
+                  lardataobj::AnalysisBase
+                  lardataobj::RecoBase
+                  larcorealg::Geometry
+                  larcore::Geometry_Geometry_service
+                  larcorealg::GeoAlgo
+                  larsim::MCCheater_BackTrackerService_service
+                  nusimdata::SimulationBase
+                  larsim::MCCheater_ParticleInventoryService_service
+                  sbnobj::Common_CRT
+                  sbnobj::Common_Reco
+                  sbnobj::Common_Analysis
+		  lardataalg::DetectorInfo
+                  art::Framework_Services_System_TriggerNamesService_service
+                  sbncode::Metadata_MetadataSBN_service
                   )
 
-cet_find_library( IFDH NAMES ifdh PATHS ENV IFDHC_LIB NO_DEFAULT_PATH )
-##include_directories( $ENV{IFDHC_FQ_DIR}/inc )
-##include_directories( $ENV{IFDH_ART_FQ_DIR}/inc )
+include_directories( $ENV{IFDHC_DIR}/inc ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+link_directories( $ENV{IFDHC_DIR}/lib )
 
-cet_find_library( IFDH_SERVICE NAMES IFDH_service PATHS ENV IFDH_ART_LIB )
-
-simple_plugin ( CAFMaker module
-               sbncode_CAFMaker
-               sbnanaobj_StandardRecord
-               IFDH_SERVICE
-               ${ART_FRAMEWORK_CORE}
-               ${ART_FRAMEWORK_PRINCIPAL}
-               ${ART_FRAMEWORK_SERVICES_REGISTRY}
-               ${ART_FRAMEWORK_SERVICES_BASIC}
-               ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-               art_Utilities canvas
+cet_build_plugin ( CAFMaker art::module
+               LIBRARIES
+               sbncode::CAFMaker
+               sbnanaobj::StandardRecord
+               larcorealg::Geometry
+               ifdh_art::IFDH_service
+               art::Framework_Core
+               art::Framework_Principal
+               art::Framework_Services_Registry
+               art::Utilities canvas::canvas
                ${MF_MESSAGELOGGER}
                ${MF_UTILITIES}
                ${FHICLCPP}
-               cetlib cetlib_except
-               ${ROOT_BASIC_LIB_LIST}
-               art_root_io_RootDB
-               hep_concurrency
-               nurandom_RandomUtils_NuRandomService_service
+               cetlib::cetlib cetlib_except::cetlib_except
+               ROOT::Core ROOT::Tree
+               art_root_io::RootDB
+               hep_concurrency::hep_concurrency
+                  lardataobj::RecoBase
+               nurandom::RandomUtils_NuRandomService_service
                BASENAME_ONLY
             )
 
 build_dictionary( CAFMaker
                   DICTIONARY_LIBRARIES
-                  sbnanaobj_StandardRecord
-                  sbnanaobj_StandardRecord_dict
-                  ${ART_FRAMEWORK_CORE}
-                  ${ART_FRAMEWORK_PRINCIPAL}
-                  art_Persistency_Common
-                  art_Persistency_Provenance
-                  art_Utilities canvas
-                  cetlib cetlib_except
+                  sbnanaobj::StandardRecord
+                  sbnanaobj::StandardRecord_dict
+                  lardataobj::RecoBase
+                  larcorealg::Geometry
+                  art::Framework_Core
+                  art::Framework_Principal
+                  art::Persistency_Common
+                  art::Persistency_Provenance
+                  art::Utilities canvas::canvas
+                  cetlib::cetlib cetlib_except::cetlib_except
                   ${MF_MESSAGELOGGER}
                   ${MF_UTILITIES}
                   )
diff --git a/sbncode/CAFMaker/RecoUtils/CMakeLists.txt b/sbncode/CAFMaker/RecoUtils/CMakeLists.txt
index fe2ecf7..e67a4b7 100644
--- a/sbncode/CAFMaker/RecoUtils/CMakeLists.txt
+++ b/sbncode/CAFMaker/RecoUtils/CMakeLists.txt
@@ -2,18 +2,18 @@
 art_make_library( LIBRARY_NAME caf_RecoUtils
                   SOURCE  RecoUtils.cc
                   LIBRARIES 
-		    ${ART_FRAMEWORK_CORE}
-		    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-		    ${ART_FRAMEWORK_SERVICES}
-		    ${ART_FRAMEWORK_PRINCIPAL}
-		    art_Persistency_Common
-		    art_Utilities canvas
+		    art::Framework_Core
+		    art::Framework_Services_Registry
+		    art::Framework_Principal
+		    art::Persistency_Common
+		    art::Utilities canvas::canvas
                     ${ROOT_BASIC_LIB_LIST}
 		    ${MF_MESSAGELOGGER}
 		    ${MF_UTILITIES}
 		    ${FHICLCPP}
-                    cetlib cetlib_except
-		    larsim_MCCheater_BackTrackerService_service
-		    larsim_MCCheater_ParticleInventoryService_service
-                    larcorealg_Geometry
+                    cetlib::cetlib cetlib_except::cetlib_except
+		    larsim::MCCheater_BackTrackerService_service
+		    larsim::MCCheater_ParticleInventoryService_service
+                    larcorealg::Geometry
+                    larcore::Geometry_DumpGeometry_module
                 )
diff --git a/sbncode/CAFMaker/bin/CMakeLists.txt b/sbncode/CAFMaker/bin/CMakeLists.txt
index 747d8fc..d68f26c 100644
--- a/sbncode/CAFMaker/bin/CMakeLists.txt
+++ b/sbncode/CAFMaker/bin/CMakeLists.txt
@@ -1,6 +1,6 @@
 cet_make_exec( extractCAFMetadata
                SOURCE extractCAFMetadata.cc
-               LIBRARIES ${ROOT_BASIC_LIB_LIST}
+               LIBRARIES ROOT::Core ROOT::RIO
                )
 
 cet_script(diff_cafs)
diff --git a/sbncode/CMakeLists.txt b/sbncode/CMakeLists.txt
index 0a05185..5266f29 100644
--- a/sbncode/CMakeLists.txt
+++ b/sbncode/CMakeLists.txt
@@ -3,7 +3,7 @@ cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_
 cet_find_library( IFBEAM NAMES ifbeam PATHS ENV IFBEAM_LIB NO_DEFAULT_PATH )
 cet_find_library( WDA NAMES wda PATHS ENV LIBWDA_LIB NO_DEFAULT_PATH )
 
-find_ups_product(sbnanaobj)
+find_package(sbnanaobj) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
 
 add_subdirectory(SBNEventWeight)
 add_subdirectory(NuMuSelection)
diff --git a/sbncode/Calibration/CMakeLists.txt b/sbncode/Calibration/CMakeLists.txt
index 827749a..c59ba5a 100644
--- a/sbncode/Calibration/CMakeLists.txt
+++ b/sbncode/Calibration/CMakeLists.txt
@@ -1,88 +1,96 @@
-link_directories(
+link_directories( ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
  $ENV{ROOTSYS}/lib
 )
 
 simple_plugin( TrackCaloSkimmer module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
+                            ROOT::X3d
                             ${ROOT_BASIC_LIB_LIST}
-	art_root_io_tfile_support
-	art_root_io
-	art_root_io_dict
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larcorealg_GeoAlgo
-	sbnobj_Common_Reco
-	larcorealg_GeoAlgo
-	lardata_DetectorInfoServices_DetectorPropertiesServiceStandard_service
-	lardataalg_DetectorInfo
-	Minuit
-	sbncode_CAFMaker
+	art_root_io::tfile_support
+	art_root_io::art_root_io
+	art_root_io::dict
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larcorealg::GeoAlgo
+	sbnobj::Common_Reco
+	larcorealg::GeoAlgo
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	lardataalg::DetectorInfo
+	ROOT::Minuit
+	sbncode::CAFMaker
+        sbnobj::Common_Calibration_dict
+        larevt::SpaceCharge
 )
 
 simple_plugin(TrackCaloSkimmerSelectStoppingTrack tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
+                            ROOT::X3d
                             ${ROOT_BASIC_LIB_LIST}
-        larcorealg_Geometry
-	larcorealg_GeoAlgo
-	lardata_DetectorInfoServices_DetectorPropertiesServiceStandard_service
-	lardataalg_DetectorInfo
+        larcorealg::Geometry
+	larcorealg::GeoAlgo
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	lardataalg::DetectorInfo
+        larevt::SpaceCharge
+        sbnobj::Common_Calibration_dict
 )
 
 simple_plugin(TrackCaloSkimmerSelectAnode2CathodeTrack tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
+                            ROOT::X3d
                             ${ROOT_BASIC_LIB_LIST}
+        sbnobj::Common_Calibration_dict
+        larevt::SpaceCharge
 )
 
+link_directories( $ENV{IFDHC_DIR}/lib )
 simple_plugin ( DataSelect module
-                IFDH_SERVICE
-               ${ART_FRAMEWORK_CORE}
-               ${ART_FRAMEWORK_PRINCIPAL}
-               ${ART_FRAMEWORK_SERVICES_REGISTRY}
-               ${ART_FRAMEWORK_SERVICES_BASIC}
-               ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-               art_Utilities canvas
+               ifdh_art::IFDH_service
+               art::Framework_Core
+               art::Framework_Principal
+               art::Framework_Services_Registry
+               art::Utilities canvas::canvas
                ${MF_MESSAGELOGGER}
                ${MF_UTILITIES}
                ${FHICLCPP}
-               cetlib cetlib_except
+               cetlib::cetlib cetlib_except::cetlib_except
         ${ROOT_EVE_LIB_LIST}
-        ${ROOT_X3d}
+        ROOT::X3d
         ${ROOT_BASIC_LIB_LIST}
+        sbnobj::Common_Calibration_dict
+	larevt::SpaceCharge
+        lardataobj::RecoBase
 )
 
 
diff --git a/sbncode/EventGenerator/MeVPrtl/CMakeLists.txt b/sbncode/EventGenerator/MeVPrtl/CMakeLists.txt
index 6d63008..e896bdc 100644
--- a/sbncode/EventGenerator/MeVPrtl/CMakeLists.txt
+++ b/sbncode/EventGenerator/MeVPrtl/CMakeLists.txt
@@ -1,65 +1,64 @@
-find_ups_product(ifdhc)
-find_ups_product(dk2nudata)
-find_ups_product(dk2nugenie)
+find_package(ifdhc) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package(dk2nudata) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package(dk2nugenie) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
 
-link_directories( $ENV{ROOTSYS}/lib )
-link_directories( $ENV{DK2NUDATA_LIB} )
-link_directories( $ENV{DK2NUGENIE_LIB} )
+link_directories( $ENV{ROOTSYS}/lib ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
+link_directories( $ENV{DK2NUDATA_LIB} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
+link_directories( $ENV{DK2NUGENIE_LIB} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
 
 add_subdirectory(Tools)
 add_subdirectory(config)
 
 simple_plugin( MeVPrtlGen module
-              ${ART_FRAMEWORK_CORE}
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${ART_FRAMEWORK_SERVICES}
-				      ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-				      ${ART_ROOT_IO_TFILE_SUPPORT}
-              ${ART_FRAMEWORK_PRINCIPAL}
-              art_Persistency_Common
-              art_Utilities canvas
+              art::Framework_Core
+              art::Framework_Services_Registry
+              art_root_io::TFileService_service
+				      art_root_io::TFileService_service
+				      art_root_io::tfile_support
+              art::Framework_Principal
+              art::Persistency_Common
+              art::Utilities canvas::canvas
               ${MF_MESSAGELOGGER}
               ${MF_UTILITIES}
               ${FHICLCPP}
-              cetlib cetlib_except
+              cetlib::cetlib cetlib_except::cetlib_except
               ${ROOT_EVE_LIB_LIST}
               ${ROOT_X3d}
               ${ROOT_CORE}
               ${ROOT_BASIC_LIB_LIST}
         			${ROOT_XMLIO}
-        			${CLHEP}
-		nusimdata_SimulationBase
-              larcorealg_Geometry
-        			nurandom_RandomUtils_NuRandomService_service
-        			larcoreobj_SummaryData
-        			sbnobj_Common_EventGen_MeVPrtl
-        			sbncode_EventGenerator_MeVPrtl_Constants
+        			CLHEP::CLHEP
+		nusimdata::SimulationBase
+              larcorealg::Geometry
+        			nurandom::RandomUtils_NuRandomService_service
+        			larcoreobj::SummaryData
+        			sbnobj::Common_EventGen_MeVPrtl
+        			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 simple_plugin( MeVPrtlTestRayTrace module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-				${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-				${ART_ROOT_IO_TFILE_SUPPORT}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+				art_root_io::TFileService_service
+				art_root_io::tfile_support
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_CORE}
                             ${ROOT_BASIC_LIB_LIST}
 			${ROOT_XMLIO}
-			${CLHEP}
-			nurandom_RandomUtils_NuRandomService_service
-			larcoreobj_SummaryData
-        		sbnobj_Common_EventGen_MeVPrtl
-			sbncode_EventGenerator_MeVPrtl_Constants
+			CLHEP::CLHEP
+			nurandom::RandomUtils_NuRandomService_service
+			larcoreobj::SummaryData
+        		sbnobj::Common_EventGen_MeVPrtl
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 
diff --git a/sbncode/EventGenerator/MeVPrtl/Tools/CMakeLists.txt b/sbncode/EventGenerator/MeVPrtl/Tools/CMakeLists.txt
index 3f1d1f6..11364dc 100644
--- a/sbncode/EventGenerator/MeVPrtl/Tools/CMakeLists.txt
+++ b/sbncode/EventGenerator/MeVPrtl/Tools/CMakeLists.txt
@@ -1,150 +1,150 @@
-link_directories( $ENV{ROOTSYS}/lib )
 
-art_make_library( LIBRARY_NAME sbncode_EventGenerator_MeVPrtl_Constants
+find_library( IFDH NAMES ifdh PATHS $ENV{IFDHC_DIR}/lib) ### MIGRATE-ACTION-RECOMMENDED: use of ENV ... may be UPS-dependent ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+include_directories( $ENV{IFDHC_DIR}/inc ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+
+find_library( DK2NUTREE NAMES dk2nuTree PATHS $ENV{DK2NUDATA_LIB})
+find_library( DK2NUGENIE NAMES dk2nuGenie PATHS $ENV{DK2NUGENIE_LIB})
+
+art_make_library( LIBRARY_NAME sbncode::EventGenerator_MeVPrtl_Constants
           SOURCE Constants.cpp
           LIBRARIES
-                        ${ROOT_BASIC_LIB_LIST}
-                        ${ROOT_EVE_LIB_LIST}
-                        ${ROOT_X3d}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
+                        ROOT::Core
+                        ROOT::Eve
+                        ROOT::X3d
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
         )
 
 
 simple_plugin( EmptyKaonGen tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			nurandom_RandomUtils_NuRandomService_service
-			nusimdata_SimulationBase
-			sbncode_EventGenerator_MeVPrtl_Constants
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			nurandom::RandomUtils_NuRandomService_service
+			nusimdata::SimulationBase
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
-cet_find_library( IFDH NAMES ifdh PATHS ENV IFDHC_LIB NO_DEFAULT_PATH )
-##include_directories( $ENV{IFDHC_FQ_DIR}/inc )
-##include_directories( $ENV{IFDH_ART_FQ_DIR}/inc )
-
-cet_find_library( IFDH_SERVICE NAMES IFDH_service PATHS ENV IFDH_ART_LIB )
-
 
 simple_plugin( NuMiKaonGen tool
-                            IFDH_SERVICE
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            ifdh_art::IFDH_service
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service 
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			ifdh
-			dk2nuTree
-			nurandom_RandomUtils_NuRandomService_service
-			nusimdata_SimulationBase
-			sbncode_EventGenerator_MeVPrtl_Constants
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			ifdh::ifdh
+			${DK2NUTREE}
+			nurandom::RandomUtils_NuRandomService_service
+			nusimdata::SimulationBase
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 simple_plugin( WeightedRayTraceBox tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service 
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			larcorealg_Geometry
-			nurandom_RandomUtils_NuRandomService_service
-			dk2nuGenie
-			dk2nuTree
-			sbncode_EventGenerator_MeVPrtl_Constants
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			larcorealg::Geometry
+			nurandom::RandomUtils_NuRandomService_service
+			${DK2NUGENIE}
+			${DK2NUTREE}
+			sbncode::EventGenerator_MeVPrtl_Constants
+                       sbnobj::Common_EventGen_MeVPrtl
 )
 
 simple_plugin( MixedWeightRayTraceBox tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			larcorealg_Geometry
-			nurandom_RandomUtils_NuRandomService_service
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			larcorealg::Geometry
+			nurandom::RandomUtils_NuRandomService_service
 			dk2nuTree
-			sbncode_EventGenerator_MeVPrtl_Constants
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 
 
 
 simple_plugin( ReThrowRayTraceBox tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			larcorealg_Geometry
-			nurandom_RandomUtils_NuRandomService_service
-			sbncode_EventGenerator_MeVPrtl_Constants
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			larcorealg::Geometry
+			nurandom::RandomUtils_NuRandomService_service
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 simple_plugin( RayTraceBox tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
-                            ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			larcorealg_Geometry
-			nurandom_RandomUtils_NuRandomService_service
-			sbncode_EventGenerator_MeVPrtl_Constants
+                            fhiclcpp::fhiclcpp
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::Eve
+                            ROOT::X3d
+                            ROOT::Core
+			CLHEP::CLHEP
+			larcorealg::Geometry
+			nurandom::RandomUtils_NuRandomService_service
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 add_subdirectory(Higgs)
diff --git a/sbncode/EventGenerator/MeVPrtl/Tools/HNL/CMakeLists.txt b/sbncode/EventGenerator/MeVPrtl/Tools/HNL/CMakeLists.txt
index 1c2f798..15fb96b 100644
--- a/sbncode/EventGenerator/MeVPrtl/Tools/HNL/CMakeLists.txt
+++ b/sbncode/EventGenerator/MeVPrtl/Tools/HNL/CMakeLists.txt
@@ -1,55 +1,55 @@
-art_make_library( LIBRARY_NAME sbncode_EventGenerator_MeVPrtl_Dalitz
+art_make_library( LIBRARY_NAME sbncode::EventGenerator_MeVPrtl_Dalitz
           SOURCE HNLDecayDalitz.cpp
           LIBRARIES
                         ${ROOT_BASIC_LIB_LIST}
                         ${ROOT_EVE_LIB_LIST}
                         ${ROOT_X3d}
-			sbncode_EventGenerator_MeVPrtl_Constants
+			sbncode::EventGenerator_MeVPrtl_Constants
         )
 
 simple_plugin( Kaon2HNLFlux tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service 
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-			EGPythia6
-			${CLHEP}
-			sbnobj_Common_EventGen_MeVPrtl
-			nugen_EventGeneratorBase_GENIE
-			nurandom_RandomUtils_NuRandomService_service
-			GSL
-			sbncode_EventGenerator_MeVPrtl_Constants
+			ROOT::EGPythia6
+			CLHEP::CLHEP
+			sbnobj::Common_EventGen_MeVPrtl
+			nugen::EventGeneratorBase_GENIE
+			nurandom::RandomUtils_NuRandomService_service
+			gsl
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 simple_plugin( HNLMakeDecay tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			nurandom_RandomUtils_NuRandomService_service
-			nusimdata_SimulationBase
-			GSL
-			sbncode_EventGenerator_MeVPrtl_Dalitz
-			sbncode_EventGenerator_MeVPrtl_Constants
+			CLHEP::CLHEP
+			nurandom::RandomUtils_NuRandomService_service
+			nusimdata::SimulationBase
+			${GSL}
+			sbncode::EventGenerator_MeVPrtl_Dalitz
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 
diff --git a/sbncode/EventGenerator/MeVPrtl/Tools/Higgs/CMakeLists.txt b/sbncode/EventGenerator/MeVPrtl/Tools/Higgs/CMakeLists.txt
index 97bab07..b4d18d6 100644
--- a/sbncode/EventGenerator/MeVPrtl/Tools/Higgs/CMakeLists.txt
+++ b/sbncode/EventGenerator/MeVPrtl/Tools/Higgs/CMakeLists.txt
@@ -1,65 +1,65 @@
 simple_plugin( MonoEnergyHiggsFlux tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service 
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			nugen_EventGeneratorBase_GENIE
-			nurandom_RandomUtils_NuRandomService_service
-			sbncode_EventGenerator_MeVPrtl_Constants
+			CLHEP::CLHEP
+			nugen::EventGeneratorBase_GENIE
+			nurandom::RandomUtils_NuRandomService_service
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 
 simple_plugin( Kaon2HiggsFlux tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
 			EGPythia6
-			${CLHEP}
-			sbnobj_Common_EventGen_MeVPrtl
-			nugen_EventGeneratorBase_GENIE
-			nurandom_RandomUtils_NuRandomService_service
-			GSL
-			sbncode_EventGenerator_MeVPrtl_Constants
+			CLHEP::CLHEP
+			sbnobj::Common_EventGen_MeVPrtl
+			nugen::EventGeneratorBase_GENIE
+			nurandom::RandomUtils_NuRandomService_service
+			${GSL}
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 simple_plugin( HiggsMakeDecay tool
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-			${CLHEP}
-			nurandom_RandomUtils_NuRandomService_service
-			nusimdata_SimulationBase
-			sbncode_EventGenerator_MeVPrtl_Constants
+			CLHEP::CLHEP
+			nurandom::RandomUtils_NuRandomService_service
+			nusimdata::SimulationBase
+			sbncode::EventGenerator_MeVPrtl_Constants
 )
 
 install_headers()
diff --git a/sbncode/EventGenerator/MeVPrtl/Tools/NuMiKaonGen_tool.cc b/sbncode/EventGenerator/MeVPrtl/Tools/NuMiKaonGen_tool.cc
index 1ba2882..4d9633b 100644
--- a/sbncode/EventGenerator/MeVPrtl/Tools/NuMiKaonGen_tool.cc
+++ b/sbncode/EventGenerator/MeVPrtl/Tools/NuMiKaonGen_tool.cc
@@ -13,7 +13,7 @@
 #include "fhiclcpp/ParameterSet.h"
 #include "messagefacility/MessageLogger/MessageLogger.h"
 #include "CLHEP/Random/RandFlat.h"
-#include "IFDH_service.h"
+#include "ifdh_art/IFDHService/IFDH_service.h"
 
 #include "nusimdata/SimulationBase/MCFlux.h"
 
diff --git a/sbncode/EventGenerator/MultiPart/CMakeLists.txt b/sbncode/EventGenerator/MultiPart/CMakeLists.txt
index a15df99..dd7226a 100644
--- a/sbncode/EventGenerator/MultiPart/CMakeLists.txt
+++ b/sbncode/EventGenerator/MultiPart/CMakeLists.txt
@@ -1,40 +1,40 @@
 # Add the subfolder containing the deconvolution tools
-art_make( 
-          MODULE_LIBRARIES larcorealg_Geometry
-            larcore_Geometry_Geometry_service
-            lardata_Utilities
-            larevt_Filters
-            lardataobj_RawData
-            larevt_CalibrationDBI_IOVData
-            larevt_CalibrationDBI_Providers
-            lardataobj_RecoBase
-            lardata_ArtDataHelper
-            larsim_Simulation nug4_ParticleNavigation 
-            lardataobj_Simulation
-            nusimdata_SimulationBase
-            lardata_Utilities
-            lardataobj_MCBase
-            larcoreobj_SummaryData
-            nusimdata_SimulationBase
-            nurandom_RandomUtils_NuRandomService_service
-            lardataobj_MCBase
-            ${CLHEP}
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-            art_Persistency_Common
-            art_Persistency_Provenance
-            art_Utilities
-            canvas
+art_make(  ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+            larcore::Geometry_Geometry_service
+            lardata::Utilities
+            larevt::Filters
+            lardataobj::RawData
+            larevt::CalibrationDBI_IOVData
+            larevt::CalibrationDBI_Providers
+            lardataobj::RecoBase
+            lardata::ArtDataHelper
+            larsim::Simulation nug4::ParticleNavigation 
+            lardataobj::Simulation
+            nusimdata::SimulationBase
+            lardata::Utilities
+            lardataobj::MCBase
+            larcoreobj::SummaryData
+            nusimdata::SimulationBase
+            nurandom::RandomUtils_NuRandomService_service
+            lardataobj::MCBase
+            CLHEP::CLHEP
+            art::Framework_Core
+            art::Framework_Principal
+            art::Framework_Services_Registry
+            art_root_io::tfile_support ${ROOT_CORE}
+            art_root_io::TFileService_service
+            art::Persistency_Common
+            art::Persistency_Provenance
+            art::Utilities
+            canvas::canvas
             ${MF_MESSAGELOGGER}
             ${MF_UTILITIES}
             ${FHICLCPP}
             ${CETLIB}
             ${ROOT_FFTW}
             ${ROOT_BASIC_LIB_LIST}
-	    ${ROOT_EG}
+	    ROOT::EG
         )
 
 install_headers()
diff --git a/sbncode/FlashMatch/CMakeLists.txt b/sbncode/FlashMatch/CMakeLists.txt
index ddb1522..f1d4127 100644
--- a/sbncode/FlashMatch/CMakeLists.txt
+++ b/sbncode/FlashMatch/CMakeLists.txt
@@ -4,35 +4,36 @@
 #  EXTRA_FLAGS  -Wall -Wextra  -pedantic  #-Wconversion
 #  )
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   MODULE_LIBRARIES
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  art_Persistency_Common
-  art_Persistency_Provenance
-  art_Utilities canvas
-
-  canvas
-  cetlib
-  cetlib_except
-
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-
-  lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-  lardata_Utilities
-  lardataobj_AnalysisBase
-  lardataobj_RawData
-  lardataobj_RecoBase
-  lardataobj_Simulation
-
-  larpandora_LArPandoraInterface
-  larsim_Utils
-
-  nusimdata_SimulationBase
+  art::Framework_Core
+  art::Framework_Principal
+  art::Framework_Services_Registry
+  art_root_io::tfile_support ${ROOT_CORE}
+  art_root_io::TFileService_service
+  art::Persistency_Common
+  art::Persistency_Provenance
+  art::Utilities canvas::canvas
+
+  canvas::canvas
+  cetlib::cetlib
+  cetlib_except::cetlib_except
+
+  larcore::Geometry_Geometry_service
+  larcorealg::Geometry
+
+  lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+  lardata::Utilities
+  lardataalg::DetectorInfo
+  lardataobj::AnalysisBase
+  lardataobj::RawData
+  lardataobj::RecoBase
+  lardataobj::Simulation
+
+  larpandora::LArPandoraInterface
+  larsim::Utils
+  sbnobj::Common_Reco
+  nusimdata::SimulationBase
   ${MF_MESSAGELOGGER}
   ${FHICLCPP}
   ${ROOT_GEOM}
diff --git a/sbncode/FluxReader/CMakeLists.txt b/sbncode/FluxReader/CMakeLists.txt
index 7e11652..02e6297 100644
--- a/sbncode/FluxReader/CMakeLists.txt
+++ b/sbncode/FluxReader/CMakeLists.txt
@@ -1,94 +1,103 @@
 cet_enable_asserts()
-include_directories ( $ENV{GENIE_INC}/GENIE )
-include_directories ( $ENV{DK2NUDATA_INC} )
-include_directories ( $ENV{DK2NUGENIE_INC} )
-link_directories( $ENV{DK2NUDATA_LIB})
+include_directories ( $ENV{GENIE}/include/GENIE ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories ( $ENV{GENIE}/include ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories ( $ENV{DK2NUDATA_INC} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories ( $ENV{DK2NUGENIE_INC} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+link_directories( $ENV{DK2NUDATA_LIB}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
 
 file(GLOB INTERFACEFILES *Interface* )
 
 simple_plugin( FluxReader
                "source"
-               sbncode_FluxReader
+               sbncode::FluxReader
+               larcore::Geometry_Geometry_service 
+               nutools::EventGeneratorBase_CRY
+               lardata::Utilities
                ${ART_FRAMEWORK_PERSISTENCY_COMMON}
 )
 
 simple_plugin ( FluxGeoFilter "module"
-                ${ART_FRAMEWORK_CORE}
-                ${ART_FRAMEWORK_PRINCIPAL}
-                ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                ${ART_ROOT_IO_TFILE_SUPPORT}
-                art_Persistency_Common canvas
-                art_Persistency_Provenance canvas
-                art_Utilities canvas
+                art::Framework_Core
+                art::Framework_Principal
+                art::Framework_Services_Registry
+                art_root_io::TFileService_service
+                art_root_io::tfile_support
+                art::Persistency_Common canvas::canvas
+                art::Persistency_Provenance canvas::canvas
+                art::Utilities canvas::canvas
                 ${MF_MESSAGELOGGER}
-                nusimdata_SimulationBase
-                larcore_Geometry_Geometry_service
-                larcorealg_Geometry
-                ${ROOT_GEOM}
+                nusimdata::SimulationBase
+                larcore::Geometry_Geometry_service
+               lardata::Utilities
+                larcorealg::Geometry
+                ROOT::Geom
                 ${ROOT_BASIC_LIB_LIST}
 )
 
-art_make_library( LIBRARY_NAME sbncode_FluxReader_FluxInterface
+art_make_library( LIBRARY_NAME sbncode::FluxReader_FluxInterface
                   SOURCE	${INTERFACEFILES}
                   LIBRARIES
-                  nusimdata_SimulationBase
+                  nusimdata::SimulationBase
+               larcore::Geometry_Geometry_service 
                   # GENIE STUFF #####################################
                   xml2
                   LOG4CPP
-                  GFwEG
-                  GFwAlg
-                  GFwMsg
-                  GFwGHEP
-                  GTlFlx
-                  dk2nuTree
+                  GENIE::GFwEG
+                  GENIE::GFwAlg
+                  GENIE::GFwMsg
+                  GENIE::GFwGHEP
+                  GENIE::GTlFlx
+                  dk2nu::Tree
                   #${DK2NUDATA}
                   ${DK2NUGENIE}
                   ####################################################
-                  cetlib cetlib_except
+                  cetlib::cetlib cetlib_except::cetlib_except
+               lardata::Utilities
 
                   ${FHICLCPP}
                   ${MF_MESSAGELOGGER}
-                  ${CLHEP}
-                  ${ROOT_BASIC_LIB_LIST}
+                  CLHEP::CLHEP
+                  ROOT::Core ROOT::Tree
                   ${Boost_SYSTEM_LIBRARY}
 )
 
-art_make( EXCLUDE FluxReader_source.cc ${INTERFACEFILES} FluxGeoFilter_module.cc
-          LIB_LIBRARIES	nusimdata_SimulationBase
-                        sbncode_FluxReader_FluxInterface
-                        larcoreobj_SummaryData
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_IO_SOURCES}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                        ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
+art_make( EXCLUDE FluxReader_source.cc ${INTERFACEFILES} FluxGeoFilter_module.cc ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          LIB_LIBRARIES	nusimdata::SimulationBase
+                        sbncode::FluxReader_FluxInterface
+                        larcoreobj::SummaryData
+               larcore::Geometry_Geometry_service 
+                        art::Framework_Core
+                        art::Framework_IO_Sources
+                        art::Framework_Principal
+                        art::Framework_Services_Registry
+                        art_root_io::TFileService_service
+                        art_root_io::TFileService_service
+                        art_root_io::tfile_support
+                        art::Persistency_Common canvas::canvas
+                        art::Persistency_Provenance canvas::canvas
+                        art::Utilities canvas::canvas
                         ${MF_MESSAGELOGGER}
                         ${MF_UTILITIES}
                         ${FHICLCPP}
                         ${Boost_SYSTEM_LIBRARY}
-                        ${ROOT_BASIC_LIB_LIST}
-                        cetlib cetlib_except
+                        ROOT::Core ROOT::Tree
+                        cetlib::cetlib cetlib_except::cetlib_except
+               nutools::EventGeneratorBase_CRY
+               lardata::Utilities
 
-          MODULE_LIBRARIES sbncode_FluxReader
-                        sbncode_FluxReader_FluxInterface
-                        nusimdata_SimulationBase
-                        larcoreobj_SummaryData
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_IO_SOURCES}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                        ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
+          MODULE_LIBRARIES sbncode::FluxReader
+                        sbncode::FluxReader_FluxInterface
+                        nusimdata::SimulationBase
+                        larcoreobj::SummaryData
+               larcore::Geometry_Geometry_service 
+               lardata::Utilities
+                        art::Framework_Core
+                        art::Framework_IO_Sources
+                        art::Framework_Principal
+                        art::Framework_Services_Registry
+                        art_root_io::TFileService_service
+                        art_root_io::TFileService_service
+                        art_root_io::tfile_support
                         # GENIE STUFF #####################################
                         xml2
                         LOG4CPP
@@ -107,7 +116,7 @@ art_make( EXCLUDE FluxReader_source.cc ${INTERFACEFILES} FluxGeoFilter_module.cc
                         ${MF_UTILITIES}
                         ${FHICLCPP}
                         ${Boost_SYSTEM_LIBRARY}
-                        ${ROOT_BASIC_LIB_LIST}
+                        ROOT::Core ROOT::Tree
 )
 
 install_headers()
diff --git a/sbncode/LArRecoProducer/CMakeLists.txt b/sbncode/LArRecoProducer/CMakeLists.txt
index a8b1c01..2e3ca7b 100644
--- a/sbncode/LArRecoProducer/CMakeLists.txt
+++ b/sbncode/LArRecoProducer/CMakeLists.txt
@@ -1,30 +1,30 @@
-#link_directories(
+#link_directories( ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
 # $ENV{ROOTSYS}/lib
 #)
 
 add_subdirectory(LArReco)
-art_make( MODULE_LIBRARIES
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+art_make( MODULE_LIBRARIES ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service 
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
-	${ROOT_X3d}
-	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-
+	ROOT::X3d
+	ROOT::Core
+	messagefacility::MF_MessageLogger
+        ROOT::EG
 	sbn_LArReco	    
-	sbnobj_Common_CRT
-	sbnobj_Common_Reco
-	lardataobj_RecoBase_AssnsDicts_dict
-	lardataobj_RecoBase_dict	
-	lardataobj_RecoBase
+	sbnobj::Common_CRT
+	sbnobj::Common_Reco
+	lardataobj::RecoBase_AssnsDicts_dict
+	lardataobj::RecoBase_dict	
+	lardataobj::RecoBase
 )
 
 install_headers()
diff --git a/sbncode/LArRecoProducer/LArReco/CMakeLists.txt b/sbncode/LArRecoProducer/LArReco/CMakeLists.txt
index 0395da4..8a416cf 100644
--- a/sbncode/LArRecoProducer/LArReco/CMakeLists.txt
+++ b/sbncode/LArRecoProducer/LArReco/CMakeLists.txt
@@ -2,18 +2,18 @@
 art_make_library( LIBRARY_NAME sbn_LArReco
   SOURCE  TrackMomentumCalculator.cxx TrajectoryMCSFitter.cxx
                   LIBRARIES
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_FRAMEWORK_SERVICES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        art_Persistency_Common
-        art_Utilities canvas
+        art::Framework_Core
+        art::Framework_Services_Registry
+        art::Framework_Principal
+        art::Persistency_Common
+        art::Utilities canvas::canvas
                     ${ROOT_BASIC_LIB_LIST}
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
-                    cetlib cetlib_except
-        lardataobj_RecoBase
-        ${ROOT_MINUIT}
-        ${ROOT_MINUIT2}
+                    cetlib::cetlib cetlib_except::cetlib_except
+        lardataobj::RecoBase larcorealg::CoreUtils lardata::RecoObjects
+        ROOT::Minuit
+        ROOT::Minuit2
+        ROOT::Graf3d
                 )
diff --git a/sbncode/Metadata/CMakeLists.txt b/sbncode/Metadata/CMakeLists.txt
index 0cfa462..8948112 100644
--- a/sbncode/Metadata/CMakeLists.txt
+++ b/sbncode/Metadata/CMakeLists.txt
@@ -1,15 +1,15 @@
 cet_enable_asserts()
 
-set( sbn_meta_lib_list   ${ART_FRAMEWORK_CORE}
-                         ${ART_FRAMEWORK_PRINCIPAL}
-                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                         ${ART_FRAMEWORK_SERVICES_BASIC}
+set( sbn_meta_lib_list   art::Framework_Core
+                         art::Framework_Principal
+                         art::Framework_Services_Registry
                          ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                         art_Framework_Services_System_TriggerNamesService_service
-			 art_Persistency_Common canvas
-			 art_Persistency_Provenance canvas
+                         art::Framework_Services_System_TriggerNamesService_service
+			 art::Persistency_Common canvas::canvas
+			 art::Persistency_Provenance canvas::canvas
                          ${MF_MESSAGELOGGER}
-                         ${ROOT_BASIC_LIB_LIST}
+                         ROOT::Core
+                         larcoreobj::SummaryData
     )
 
 simple_plugin( FileCatalogMetadataSBN  "service"
@@ -18,8 +18,8 @@ simple_plugin( FileCatalogMetadataSBN  "service"
 
 simple_plugin( MetadataSBN "service"
                ${sbn_meta_lib_list}
-               art_Framework_IO
-               art_Framework_IO_detail
+               art::Framework_IO
+               art::Framework_IO_detail
         )
 
 install_headers()
diff --git a/sbncode/NuMuSelection/CMakeLists.txt b/sbncode/NuMuSelection/CMakeLists.txt
index 02bfebb..f1f69d9 100644
--- a/sbncode/NuMuSelection/CMakeLists.txt
+++ b/sbncode/NuMuSelection/CMakeLists.txt
@@ -1,86 +1,95 @@
 simple_plugin( MuPVertexStudy module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-	art_root_io_tfile_support
-	art_root_io
-	art_root_io_dict
+	art_root_io::tfile_support
+	art_root_io::art_root_io
+	art_root_io::dict
         caf_RecoUtils
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larcorealg_GeoAlgo
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larsim_MCCheater_ParticleInventoryService_service
-	larcorealg_GeoAlgo
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larcorealg::GeoAlgo
+        lardataalg::DetectorInfo
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larsim::MCCheater_ParticleInventoryService_service
+	larcorealg::GeoAlgo
+        larreco::RecoAlg
 )
 simple_plugin( MuonS2NStudy module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-	art_root_io_tfile_support
-	art_root_io
-	art_root_io_dict
+	art_root_io::tfile_support
+	art_root_io::art_root_io
+	art_root_io::dict
         caf_RecoUtils
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larcorealg_GeoAlgo
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larsim_MCCheater_ParticleInventoryService_service
-	larcorealg_GeoAlgo
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larcorealg::GeoAlgo
+        lardataalg::DetectorInfo
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larsim::MCCheater_ParticleInventoryService_service
+	larcorealg::GeoAlgo
+        larreco::RecoAlg
 )
 simple_plugin( NuMuEfficiencyStudy module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
+                            cetlib::cetlib cetlib_except::cetlib_except
                             ${ROOT_EVE_LIB_LIST}
                             ${ROOT_X3d}
                             ${ROOT_BASIC_LIB_LIST}
-	art_root_io_tfile_support
-	art_root_io
-	art_root_io_dict
+	art_root_io::tfile_support
+	art_root_io::art_root_io
+	art_root_io::dict
         caf_RecoUtils
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larcorealg_GeoAlgo
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larsim_MCCheater_ParticleInventoryService_service
-	larcorealg_GeoAlgo
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larcorealg::GeoAlgo
+        lardataalg::DetectorInfo
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larsim::MCCheater_ParticleInventoryService_service
+	larcorealg::GeoAlgo
+        larreco::RecoAlg
 )
 
 install_headers()
diff --git a/sbncode/OpDet/CMakeLists.txt b/sbncode/OpDet/CMakeLists.txt
index 3a27da6..4119140 100644
--- a/sbncode/OpDet/CMakeLists.txt
+++ b/sbncode/OpDet/CMakeLists.txt
@@ -1,7 +1,7 @@
 cet_enable_asserts()
 
-art_make(   TOOL_LIBRARIES
-	    art_Utilities
+art_make(   TOOL_LIBRARIES ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+	    art::Utilities
 	    ${FHICLCPP}
 	    ${CETLIB}
 )
diff --git a/sbncode/OpT0Finder/CMakeLists.txt b/sbncode/OpT0Finder/CMakeLists.txt
index 3837439..1e3828e 100644
--- a/sbncode/OpT0Finder/CMakeLists.txt
+++ b/sbncode/OpT0Finder/CMakeLists.txt
@@ -1,5 +1,5 @@
 # Add Geant4 directories as needed by flashmatch code
-include_directories($ENV{GEANT4_FQ_DIR}/include)
+include_directories($ENV{GEANT4_FQ_DIR}/include) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
 add_subdirectory(Products)
 add_subdirectory(flashmatch)
diff --git a/sbncode/OpT0Finder/Products/CMakeLists.txt b/sbncode/OpT0Finder/Products/CMakeLists.txt
index 1650113..66cccf9 100644
--- a/sbncode/OpT0Finder/Products/CMakeLists.txt
+++ b/sbncode/OpT0Finder/Products/CMakeLists.txt
@@ -1,11 +1,18 @@
 # for classes_def.xml!!
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-# include_directories( $ENV{NUTOOLS_INC} )
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+# include_directories( $ENV{NUTOOLS_INC} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+get_target_property(DICT_INC_DIR lardataobj::RecoBase INTERFACE_INCLUDE_DIRECTORIES)
+include_directories( ${DICT_INC_DIR} )
+get_target_property(DICT_INC_DIR larcorealg::Geometry INTERFACE_INCLUDE_DIRECTORIES)
+include_directories( ${DICT_INC_DIR} )
+get_target_property(DICT_INC_DIR larcoreobj::SimpleTypesAndConstants INTERFACE_INCLUDE_DIRECTORIES)
+include_directories( ${DICT_INC_DIR} )
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_EG}
+        lardataobj::RecoBase
+        ROOT::Core
+        ROOT::Eg
 )
 
 install_headers()
diff --git a/sbncode/OpT0Finder/flashmatch/Algorithms/CMakeLists.txt b/sbncode/OpT0Finder/flashmatch/Algorithms/CMakeLists.txt
index 8994d76..1e6e55e 100644
--- a/sbncode/OpT0Finder/flashmatch/Algorithms/CMakeLists.txt
+++ b/sbncode/OpT0Finder/flashmatch/Algorithms/CMakeLists.txt
@@ -1,20 +1,19 @@
-set( ROOTLIB -L$ENV{ROOTSYS}/lib -lCore -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMinuit -pthread -lm -ldl)
+set( ROOTLIB -L$ENV{ROOTSYS}/lib -lCore -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMinuit -pthread -lm -ldl) ### MIGRATE-ACTION-RECOMMENDED: use of $ENV{... may be UPS-dependent
 
-link_libraries( ${LIB_NAME} -L$ENV{BOOST_LIB} -lboost_system ${ROOTLIB} )
+link_libraries( ${LIB_NAME} -L$ENV{BOOST_LIB} -lboost_system ${ROOTLIB} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics ### MIGRATE-ACTION-RECOMMENDED: use of $ENV{... may be UPS-dependent
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
-        larsim_PhotonPropagation
-        larsim_PhotonPropagation_PhotonVisibilityService_service
-        larsim_LegacyLArG4
-        sbncode_OpT0Finder_flashmatch_GeoAlgo
-        sbncode_OpT0Finder_flashmatch_Base
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        larsim::PhotonPropagation
+        larsim::PhotonPropagation_PhotonVisibilityService_service
+        larsim::LegacyLArG4
+        sbncode::OpT0Finder_flashmatch_GeoAlgo
+        sbncode::OpT0Finder_flashmatch_Base
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-        ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
+        art::Framework_Services_Registry
+        art_root_io::TFileService_service
         ${ART_PERSISTENCY_COMMON}
         ${ART_PERSISTENCY_PROVENANCE}
         ${ART_UTILITIES}
diff --git a/sbncode/OpT0Finder/flashmatch/Base/CMakeLists.txt b/sbncode/OpT0Finder/flashmatch/Base/CMakeLists.txt
index 3742178..5f08394 100644
--- a/sbncode/OpT0Finder/flashmatch/Base/CMakeLists.txt
+++ b/sbncode/OpT0Finder/flashmatch/Base/CMakeLists.txt
@@ -1,36 +1,32 @@
-set( ROOTLIB -L$ENV{ROOTSYS}/lib -lCore  -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -pthread -lm -ldl)
-link_libraries( ${LIB_NAME} -L$ENV{BOOST_LIB} ${ROOTLIB} )
-art_make(
+set( ROOTLIB ROOT::Core  ROOT::RIO ROOT::Net ROOT::Hist ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics ROOT::MathCore ROOT::Thread ) ### MIGRATE-ACTION-RECOMMENDED: use of $ENV{... may be UPS-dependent
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
-        sbncode_OpT0Finder_flashmatch_GeoAlgo
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardataalg_DetectorInfo
-        art_Framework_Core
-        art_Framework_Services_Registry
-        art_Framework_Principal
-        art_Persistency_Provenance
-        art_Utilities
-        canvas
-        art_Utilities canvas
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+        sbncode::OpT0Finder_flashmatch_GeoAlgo
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardataalg::DetectorInfo
+        art::Persistency_Provenance
+        art::Utilities
+        canvas::canvas
+        art::Utilities canvas::canvas
+        art::Framework_Core
+        art::Framework_IO_Sources
+        art::Framework_Principal
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        larsim::PhotonPropagation
         ${ART_PERSISTENCY_COMMON}
         ${ART_PERSISTENCY_PROVENANCE}
         ${ART_UTILITIES}
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${CETLIB}
-        ${CLHEP}
-        ${BOOST_LIB}
-        ${Boost_SYSTEM_LIBRARY}
-        ${ROOT_BASIC_LIB_LIST}
+        CLHEP::CLHEP
+        Boost::system
+        ${ROOTLIB}
         ${FHICLCPP}
-        cetlib cetlib_except
+        cetlib::cetlib cetlib_except::cetlib_except
 )
 
 install_headers()
diff --git a/sbncode/OpT0Finder/flashmatch/GeoAlgo/CMakeLists.txt b/sbncode/OpT0Finder/flashmatch/GeoAlgo/CMakeLists.txt
index a7a8eb7..9c05406 100644
--- a/sbncode/OpT0Finder/flashmatch/GeoAlgo/CMakeLists.txt
+++ b/sbncode/OpT0Finder/flashmatch/GeoAlgo/CMakeLists.txt
@@ -1,6 +1,6 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
-        ${ROOT_BASIC_LIB_LIST}
+        ROOT::Core ROOT::Physics
 )
 
 install_headers()
diff --git a/sbncode/PID/CMakeLists.txt b/sbncode/PID/CMakeLists.txt
index a090c6e..9ab5078 100644
--- a/sbncode/PID/CMakeLists.txt
+++ b/sbncode/PID/CMakeLists.txt
@@ -1,41 +1,39 @@
-#link_directories(
+#link_directories( ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
 # $ENV{ROOTSYS}/lib
 #)
 
-art_make( MODULE_LIBRARIES
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-  ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_FRAMEWORK_SERVICES}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  art_Persistency_Common
-  art_Utilities canvas
+art_make( MODULE_LIBRARIES ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+  art::Framework_Core
+  art::Framework_Services_Registry
+  art_root_io::TFileService_service
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  art::Framework_Principal
+  art::Persistency_Common
+  art::Utilities canvas::canvas
   ${MF_MESSAGELOGGER}
   ${MF_UTILITIES}
   ${FHICLCPP}
-  cetlib cetlib_except
+  cetlib::cetlib cetlib_except::cetlib_except
   ${ROOT_EVE_LIB_LIST}
   ${ROOT_X3d}
   ${ROOT_BASIC_LIB_LIST}
   ${ROOT_GEOM}
   ROOT::TMVA
 
-  MF_MessageLogger
+  messagefacility::MF_MessageLogger
 
   sbn_LArReco
-  sbnobj_Common_CRT
-  sbnobj_Common_Reco
-  lardataobj_RecoBase_AssnsDicts_dict
-  lardataobj_RecoBase_dict
-  lardataobj_RecoBase
-  larsim_Utils
-  larsim_Simulation
-  larsim_MCCheater_BackTrackerService_service
-  larsim_MCCheater_ParticleInventoryService_service
-  nusimdata_SimulationBase
+  sbnobj::Common_CRT
+  sbnobj::Common_Reco
+  lardataobj::RecoBase_AssnsDicts_dict
+  lardataobj::RecoBase_dict
+  lardataobj::RecoBase
+  larsim::Utils
+  larsim::Simulation
+  larsim::MCCheater_BackTrackerService_service
+  larsim::MCCheater_ParticleInventoryService_service
+  nusimdata::SimulationBase
 
   caf_RecoUtils
 )
diff --git a/sbncode/SBNEventWeight/App/CMakeLists.txt b/sbncode/SBNEventWeight/App/CMakeLists.txt
index 6d1d2fa..b7ee9ef 100644
--- a/sbncode/SBNEventWeight/App/CMakeLists.txt
+++ b/sbncode/SBNEventWeight/App/CMakeLists.txt
@@ -1,22 +1,8 @@
-art_make(
-  LIBRARY_NAME sbncode_SBNEventWeight
-  LIB_LIBRARIES
-    sbnobj_Common_SBNEventWeight
-    sbncode_SBNEventWeight_Base
-    sbncode_SBNEventWeight_Calculators_CrossSection
-    sbncode_SBNEventWeight_Calculators_BNBFlux
-    #sbncode_SBNEventWeight_Calculators_Geant4
-  MODULE_LIBRARIES
-    sbnobj_Common_SBNEventWeight
-    sbncode_SBNEventWeight_Base
-    sbncode_SBNEventWeight_Calculators_CrossSection
-    sbncode_SBNEventWeight_Calculators_BNBFlux
-    nusimdata_SimulationBase
-    ${MF_MESSAGELOGGER}
-    ${ROOT_GEOM}
-    ${LXML2}
-    GSL
-)
+simple_plugin(SBNEventWeight module
+  sbnobj::Common_SBNEventWeight sbncode::SBNEventWeight_Base
+  sbncode::SBNEventWeight_Calculators_CrossSection
+  sbncode::SBNEventWeight_Calculators_BNBFlux nusimdata::SimulationBase
+  ROOT::Geom)
 
 install_headers()
 install_fhicl()
diff --git a/sbncode/SBNEventWeight/Base/CMakeLists.txt b/sbncode/SBNEventWeight/Base/CMakeLists.txt
index c9d79d2..eece2cd 100644
--- a/sbncode/SBNEventWeight/Base/CMakeLists.txt
+++ b/sbncode/SBNEventWeight/Base/CMakeLists.txt
@@ -1,15 +1,15 @@
-art_make(
-  LIBRARY_NAME sbncode_SBNEventWeight_Base
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+  LIBRARY_NAME sbncode::SBNEventWeight_Base
   LIB_LIBRARIES
-    sbnobj_Common_SBNEventWeight
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${ART_FRAMEWORK_SERVICES_OPTIONAL}
+    sbnobj::Common_SBNEventWeight
+    nurandom::RandomUtils_NuRandomService_service
+    art::Framework_Services_Registry
     ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
     ${ART_UTILITIES}
     ${ROOT_BASIC_LIB_LIST}
-    ${CLHEP}
-    canvas
-    cetlib_except
+    CLHEP::CLHEP
+    canvas::canvas
+    cetlib_except::cetlib_except
 )
 
 install_headers()
diff --git a/sbncode/SBNEventWeight/Calculators/BNBFlux/CMakeLists.txt b/sbncode/SBNEventWeight/Calculators/BNBFlux/CMakeLists.txt
index 56f20ab..66ae865 100644
--- a/sbncode/SBNEventWeight/Calculators/BNBFlux/CMakeLists.txt
+++ b/sbncode/SBNEventWeight/Calculators/BNBFlux/CMakeLists.txt
@@ -1,19 +1,20 @@
-include_directories($ENV{GENIE_INC}/GENIE)
+include_directories($ENV{GENIE}/include/GENIE)
 
 art_make(
   LIBRARY_NAME sbncode_SBNEventWeight_Calculators_BNBFlux
   LIB_LIBRARIES
-    sbncode_SBNEventWeight_Base
-    nugen_EventGeneratorBase_GENIE
-    nugen_NuReweight_art
-    nugen_NuReweight
-    nurandom_RandomUtils_NuRandomService_service
-    ${ART_FRAMEWORK_PRINCIPAL}
-    ${ART_PERSISTENCY_PROVENANCE}
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${FHICLCPP}
-    ${CETLIB}
-    nusimdata_SimulationBase
+    sbncode::SBNEventWeight_Base
+    nugen::EventGeneratorBase_GENIE
+    nugen::NuReweight_art
+    nugen::NuReweight
+    nurandom::RandomUtils_NuRandomService_service
+    art::Framework_Principal
+    art::Persistency_Provenance
+    art::Framework_Services_Registry
+    fhiclcpp::fhiclcpp
+    cetlib::cetlib
+    nusimdata::SimulationBase
+    ROOT::Hist
 )
 
 install_headers()
diff --git a/sbncode/SBNEventWeight/Calculators/CrossSections/CMakeLists.txt b/sbncode/SBNEventWeight/Calculators/CrossSections/CMakeLists.txt
index 2e1d1f6..303f5ef 100644
--- a/sbncode/SBNEventWeight/Calculators/CrossSections/CMakeLists.txt
+++ b/sbncode/SBNEventWeight/Calculators/CrossSections/CMakeLists.txt
@@ -1,18 +1,18 @@
-include_directories($ENV{GENIE_INC}/GENIE)
+include_directories($ENV{GENIE}/include/GENIE) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   LIBRARY_NAME sbncode_SBNEventWeight_Calculators_CrossSection
   LIB_LIBRARIES
-    sbncode_SBNEventWeight_Base
-    nugen_EventGeneratorBase_GENIE
-    nugen_NuReweight_art
-    nugen_NuReweight
-    nurandom_RandomUtils_NuRandomService_service
-    ${ART_FRAMEWORK_PRINCIPAL}
+    sbncode::SBNEventWeight_Base
+    nugen::EventGeneratorBase_GENIE
+    nugen::NuReweight_art
+    nugen::NuReweight
+    nurandom::RandomUtils_NuRandomService_service
+    art::Framework_Principal
     ${ART_PERSISTENCY_PROVENANCE}
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
+    art::Framework_Services_Registry
     ${FHICLCPP}
-    cetlib_except
+    cetlib_except::cetlib_except
 )
 
 install_headers()
diff --git a/sbncode/TPCReco/CMakeLists.txt b/sbncode/TPCReco/CMakeLists.txt
index 9c2b25c..8083eff 100644
--- a/sbncode/TPCReco/CMakeLists.txt
+++ b/sbncode/TPCReco/CMakeLists.txt
@@ -3,56 +3,58 @@ add_subdirectory(TrackSplit)
 add_subdirectory(VertexStub)
 add_subdirectory(CalorimetryAnalysis)
 
-link_directories(
+link_directories( ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
  $ENV{ROOTSYS}/lib
 )
 
 simple_plugin(NuVertexChargeTree module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
-	${ROOT_X3d}
+	ROOT::X3d
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        
-        art_root_io_tfile_support
-        art_root_io
-        art_root_io_dict
+	messagefacility::MF_MessageLogger
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        lardataalg::DetectorInfo        
+        art_root_io::tfile_support
+        art_root_io::art_root_io
+        art_root_io::dict
         caf_RecoUtils
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-	larpandora_LArPandoraInterface
-        larsim_MCCheater_ParticleInventoryService_service
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+	larpandora::LArPandoraInterface
+        larsim::MCCheater_ParticleInventoryService_service
 	sbn_LArReco	    
-	sbncode_TPCReco_VertexStub
+	sbncode::TPCReco_VertexStub
 )
+
+link_directories( $ENV{IFDHC_DIR}/lib )
+
 simple_plugin ( EventSelect module
-                IFDH_SERVICE
-               ${ART_FRAMEWORK_CORE}
-               ${ART_FRAMEWORK_PRINCIPAL}
-               ${ART_FRAMEWORK_SERVICES_REGISTRY}
-               ${ART_FRAMEWORK_SERVICES_BASIC}
-               ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-               art_Utilities canvas
+               ifdh_art::IFDH_service
+               art::Framework_Core
+               art::Framework_Principal
+               art::Framework_Services_Registry
+               art::Utilities canvas::canvas
                ${MF_MESSAGELOGGER}
                ${MF_UTILITIES}
                ${FHICLCPP}
-               cetlib cetlib_except
+               cetlib::cetlib cetlib_except::cetlib_except
+               lardataalg::DetectorInfo        
 	${ROOT_EVE_LIB_LIST}
-	${ROOT_X3d}
+	ROOT::X3d
 	${ROOT_BASIC_LIB_LIST}
 )
 
diff --git a/sbncode/TPCReco/CalorimetryAnalysis/CMakeLists.txt b/sbncode/TPCReco/CalorimetryAnalysis/CMakeLists.txt
index cae53c3..3d184e7 100644
--- a/sbncode/TPCReco/CalorimetryAnalysis/CMakeLists.txt
+++ b/sbncode/TPCReco/CalorimetryAnalysis/CMakeLists.txt
@@ -1,33 +1,35 @@
 simple_plugin( CalorimetryAnalysis module
-                            ${ART_FRAMEWORK_CORE}
-                            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                            ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-                            ${ART_FRAMEWORK_PRINCIPAL}
-                            art_Persistency_Common
-                            art_Utilities canvas
+                            art::Framework_Core
+                            art::Framework_Services_Registry
+                            art_root_io::TFileService_service
+                            art::Framework_Principal
+                            art::Persistency_Common
+                            art::Utilities canvas::canvas
                             ${MF_MESSAGELOGGER}
                             ${MF_UTILITIES}
                             ${FHICLCPP}
-                            cetlib cetlib_except
-                            ${ROOT_EVE_LIB_LIST}
-                            ${ROOT_X3d}
-                            ${ROOT_BASIC_LIB_LIST}
-	art_root_io_tfile_support
-	art_root_io
-	art_root_io_dict
+                            cetlib::cetlib cetlib_except::cetlib_except
+                            ROOT::EG
+                            ROOT::X3d
+                            ROOT::Core
+	art_root_io::tfile_support
+	art_root_io::art_root_io
+	art_root_io::dict
         caf_RecoUtils
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larcorealg_GeoAlgo
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larsim_MCCheater_ParticleInventoryService_service
-	sbnobj_Common_Reco
-	larcorealg_GeoAlgo
-	lardata_DetectorInfoServices_DetectorPropertiesServiceStandard_service
-	lardataalg_DetectorInfo
+        larreco::RecoAlg
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larcorealg::GeoAlgo
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larsim::MCCheater_ParticleInventoryService_service
+	sbnobj::Common_Reco
+	larcorealg::GeoAlgo
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	lardataalg::DetectorInfo
+        larevt::SpaceCharge
 )
 
 
diff --git a/sbncode/TPCReco/KinkExp/CMakeLists.txt b/sbncode/TPCReco/KinkExp/CMakeLists.txt
index 17e04b1..d61df1d 100644
--- a/sbncode/TPCReco/KinkExp/CMakeLists.txt
+++ b/sbncode/TPCReco/KinkExp/CMakeLists.txt
@@ -1,4 +1,4 @@
-link_directories(
+link_directories( ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
  $ENV{ROOTSYS}/lib
 )
 
@@ -6,85 +6,85 @@ art_make_library(
 	LIBRARY_NAME sbn_LArReco_PCA
 	SOURCE PCA.cc
 	LIBRARIES
-	sbnobj_Common_Reco
-	lardataobj_RecoBase_AssnsDicts_dict
-	lardataobj_RecoBase_dict	
+	sbnobj::Common_Reco
+	lardataobj::RecoBase_AssnsDicts_dict
+	lardataobj::RecoBase_dict	
 	sbndcode_OpDetSim
 )
 
 simple_plugin(PCAnglePlaneMaker module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
+	messagefacility::MF_MessageLogger
 
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
 	sbn_LArReco_PCA
 )
 
 simple_plugin(PCAngleKinkFinder module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
+	messagefacility::MF_MessageLogger
 	Minuit
 
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
 )
 
 simple_plugin(PCAngleKinkTree module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
+	messagefacility::MF_MessageLogger
 
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
         
-        art_root_io_tfile_support
-        art_root_io
-        art_root_io_dict
+        art_root_io::tfile_support
+        art_root_io::art_root_io
+        art_root_io::dict
         caf_RecoUtils
-        larsim_MCCheater_BackTrackerService_service
-        nusimdata_SimulationBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
+        larsim::MCCheater_BackTrackerService_service
+        nusimdata::SimulationBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
 	sbn_LArReco_PCA
 )
 
diff --git a/sbncode/TPCReco/TrackHit/CMakeLists.txt b/sbncode/TPCReco/TrackHit/CMakeLists.txt
index 7ee08b2..c9d1ba2 100644
--- a/sbncode/TPCReco/TrackHit/CMakeLists.txt
+++ b/sbncode/TPCReco/TrackHit/CMakeLists.txt
@@ -1,73 +1,76 @@
 simple_plugin(TrackAreaHit module
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        art_Persistency_Common
-        art_Utilities canvas
+        art::Framework_Core
+        art::Framework_Services_Registry
+        art_root_io::TFileService_service
+        art::Framework_Principal
+        art::Persistency_Common
+        art::Utilities canvas::canvas
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
-        cetlib cetlib_except
+        cetlib::cetlib cetlib_except::cetlib_except
         ${ROOT_EVE_LIB_LIST}
         ${ROOT_X3d}
         ${ROOT_BASIC_LIB_LIST}
-        MF_MessageLogger
-        lardataobj_RecoBase_AssnsDicts_dict
-        lardataobj_RecoBase     
-        lardataobj_RecoBase_dict        
-
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-	lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-	lardata_DetectorInfoServices_DetectorPropertiesServiceStandard_service
-	lardataalg_DetectorInfo
+        messagefacility::MF_MessageLogger
+        lardataobj::RecoBase_AssnsDicts_dict
+        lardataobj::RecoBase     
+        lardataobj::RecoBase_dict        
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+	lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	lardataalg::DetectorInfo
 )
 
 simple_plugin(TrackHitFilter module
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        art_Persistency_Common
-        art_Utilities canvas
+        art::Framework_Core
+        art::Framework_Services_Registry
+        art_root_io::TFileService_service
+        art::Framework_Principal
+        art::Persistency_Common
+        art::Utilities canvas::canvas
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
-        cetlib cetlib_except
+        cetlib::cetlib cetlib_except::cetlib_except
         ${ROOT_EVE_LIB_LIST}
         ${ROOT_X3d}
         ${ROOT_BASIC_LIB_LIST}
-        MF_MessageLogger
-        lardataobj_RecoBase_AssnsDicts_dict
-        lardataobj_RecoBase     
-        lardataobj_RecoBase_dict        
+        messagefacility::MF_MessageLogger
+        lardataobj::RecoBase_AssnsDicts_dict
+        lardataobj::RecoBase     
+        lardataobj::RecoBase_dict        
+	lardataalg::DetectorInfo
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
 
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
 )
 
 simple_plugin(TrackHitDumper module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-	lardataobj_RecoBase_AssnsDicts_dict
-	lardataobj_RecoBase	
-	lardataobj_RecoBase_dict	
+	messagefacility::MF_MessageLogger
+	lardataobj::RecoBase_AssnsDicts_dict
+	lardataobj::RecoBase	
+	lardataobj::RecoBase_dict	
+	lardataalg::DetectorInfo
+	lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
 
-	larcorealg_Geometry
-	larcore_Geometry_Geometry_service
+	larcorealg::Geometry
+	larcore::Geometry_Geometry_service
 )
 
 install_headers()
diff --git a/sbncode/TPCReco/TrackSplit/CMakeLists.txt b/sbncode/TPCReco/TrackSplit/CMakeLists.txt
index 7e92476..4470cfd 100644
--- a/sbncode/TPCReco/TrackSplit/CMakeLists.txt
+++ b/sbncode/TPCReco/TrackSplit/CMakeLists.txt
@@ -1,49 +1,49 @@
 simple_plugin(TrackSplitter module
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  art_Persistency_Common
-  art_Utilities canvas
+  art::Framework_Core
+  art::Framework_Services_Registry
+  art_root_io::TFileService_service
+  art::Framework_Principal
+  art::Persistency_Common
+  art::Utilities canvas::canvas
   ${MF_MESSAGELOGGER}
   ${MF_UTILITIES}
   ${FHICLCPP}
-  cetlib cetlib_except
+  cetlib::cetlib cetlib_except::cetlib_except
   ${ROOT_EVE_LIB_LIST}
   ${ROOT_X3d}
   ${ROOT_BASIC_LIB_LIST}
-  MF_MessageLogger
-  larcorealg_Geometry
-  larcore_Geometry_Geometry_service
-  lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-  lardata_DetectorInfoServices_DetectorPropertiesServiceStandard_service
-  lardataalg_DetectorInfo
+  messagefacility::MF_MessageLogger
+  larcorealg::Geometry
+  larcore::Geometry_Geometry_service
+  lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+  lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+  lardataalg::DetectorInfo
 
   sbn_LArReco
-  sbnobj_Common_Reco
+  sbnobj::Common_Reco
 )
 
 simple_plugin(MergedTrackIdentifier module
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  art_Persistency_Common
-  art_Utilities canvas
+  art::Framework_Core
+  art::Framework_Services_Registry
+  art_root_io::TFileService_service
+  art::Framework_Principal
+  art::Persistency_Common
+  art::Utilities canvas::canvas
   ${MF_MESSAGELOGGER}
   ${MF_UTILITIES}
   ${FHICLCPP}
-  cetlib cetlib_except
+  cetlib::cetlib cetlib_except::cetlib_except
   ${ROOT_EVE_LIB_LIST}
   ${ROOT_X3d}
   ${ROOT_BASIC_LIB_LIST}
-  MF_MessageLogger
-  larcorealg_Geometry
-  larcore_Geometry_Geometry_service
-  larpandora_LArPandoraInterface
+  messagefacility::MF_MessageLogger
+  larcorealg::Geometry
+  larcore::Geometry_Geometry_service
+  larpandora::LArPandoraInterface
 
   sbn_LArReco
-  sbnobj_Common_Reco
+  sbnobj::Common_Reco
 )
 
 install_headers()
diff --git a/sbncode/TPCReco/VertexStub/CMakeLists.txt b/sbncode/TPCReco/VertexStub/CMakeLists.txt
index 66c0848..837bdc3 100644
--- a/sbncode/TPCReco/VertexStub/CMakeLists.txt
+++ b/sbncode/TPCReco/VertexStub/CMakeLists.txt
@@ -1,121 +1,125 @@
 art_make_library(
         SOURCE StubBuilder.cxx StubMergeAlgorithms.cxx
         LIBRARIES
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Persistency_Provenance
-	canvas art_Utilities
+	art::Framework_Core
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Persistency_Provenance
+	canvas::canvas art::Utilities
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-	larreco_Calorimetry
-	lardataobj_RecoBase
-	lardataalg_DetectorInfo
+	messagefacility::MF_MessageLogger
+lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+	larreco::Calorimetry
+	lardataobj::RecoBase
+	lardataalg::DetectorInfo
+        larevt::SpaceCharge
 )
 simple_plugin(VertexChargeVacuum module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_PRINCIPAL}
-	${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	art_Persistency_Common
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art::Persistency_Common
+	art::Utilities canvas::canvas
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-	larreco_Calorimetry
-	lardataobj_RecoBase
-	lardataalg_DetectorInfo
-	sbncode_TPCReco_VertexStub
+	messagefacility::MF_MessageLogger
+lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+	larreco::Calorimetry
+	lardataobj::RecoBase
+	lardataalg::DetectorInfo
+	sbncode::TPCReco_VertexStub
+        larevt::SpaceCharge
 )
 
 simple_plugin(VertexStubTracker module
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-	${ART_FRAMEWORK_PRINCIPAL}
-	art_Persistency_Common
-	art_Persistency_Provenance
-	art_Utilities canvas
+	art::Framework_Core
+	art::Framework_Services_Registry
+	art_root_io::TFileService_service
+	art::Framework_Principal
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities canvas::canvas
 	${MF_MESSAGELOGGER}
 	${MF_UTILITIES}
 	${FHICLCPP}
-	cetlib cetlib_except
+	cetlib::cetlib cetlib_except::cetlib_except
 	${ROOT_EVE_LIB_LIST}
 	${ROOT_X3d}
 	${ROOT_BASIC_LIB_LIST}
-	MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-	larreco_Calorimetry
-	lardataalg_DetectorInfo
-	sbncode_TPCReco_VertexStub
+	messagefacility::MF_MessageLogger
+lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+	larreco::Calorimetry
+	lardataalg::DetectorInfo
+	sbncode::TPCReco_VertexStub
+        larevt::SpaceCharge
 )
 
 simple_plugin(PlaneStubMerge tool
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        art_Persistency_Common
-	art_Persistency_Provenance
-        art_Utilities canvas
+        art::Framework_Core
+        art::Framework_Services_Registry
+        art_root_io::TFileService_service
+        art::Framework_Principal
+        art::Persistency_Common
+	art::Persistency_Provenance
+        art::Utilities canvas::canvas
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
-        cetlib cetlib_except
+        cetlib::cetlib cetlib_except::cetlib_except
         ${ROOT_EVE_LIB_LIST}
         ${ROOT_X3d}
         ${ROOT_BASIC_LIB_LIST}
-        MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-	larreco_Calorimetry
-	lardataalg_DetectorInfo
-	sbncode_TPCReco_VertexStub
+        messagefacility::MF_MessageLogger
+lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+	larreco::Calorimetry
+	lardataalg::DetectorInfo
+	sbncode::TPCReco_VertexStub
+        larevt::SpaceCharge
 )
 
 simple_plugin(TwoPlaneStubMerge tool
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}                ${ART_FRAMEWORK_SERVICES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        art_Persistency_Common
-        art_Utilities canvas
+        art::Framework_Core
+        art::Framework_Services_Registry
+        art_root_io::TFileService_service
+        art::Framework_Principal
+        art::Persistency_Common
+        art::Utilities canvas::canvas
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
-        cetlib cetlib_except
+        cetlib::cetlib cetlib_except::cetlib_except
         ${ROOT_EVE_LIB_LIST}
         ${ROOT_X3d}
         ${ROOT_BASIC_LIB_LIST}
-        MF_MessageLogger
-
-	sbnobj_Common_Reco
-	lardataobj_AnalysisBase
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-	larreco_Calorimetry
-	lardataalg_DetectorInfo
-	sbncode_TPCReco_VertexStub
+        messagefacility::MF_MessageLogger
+lardata::DetectorInfoServices_DetectorPropertiesServiceStandard_service
+	sbnobj::Common_Reco
+	lardataobj::AnalysisBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+	larreco::Calorimetry
+	lardataalg::DetectorInfo
+	sbncode::TPCReco_VertexStub
+        larevt::SpaceCharge
 )
 
 add_subdirectory(config)
diff --git a/ups/product_deps b/ups/product_deps
index 10dcef1..9107a20 100644
--- a/ups/product_deps
+++ b/ups/product_deps
@@ -1,69 +1,345 @@
-# This @product_deps@ file defines dependencies for this package.
+########################################################################
+# product_deps
+#
+#   Define attributes of a package to be built and distributed as a UPS
+#   product.
+#
+# This file is parsed as a consequence of sourcing the
+# setup_for_development or setup_deps shell-agnostic scripts.
+#
+# Generated by cetmodules 2.29.07 at Wed Nov 03 18:34:25 CDT
+########################################################################
+
+####################################
+# Basic information.
 
-# The *parent* line must the first non-commented line and defines this product
-parent sbncode
-defaultqual e20
+##################
+# parent
+##################
+#
+# The parent line - if present - must be the first non-comment line in
+# the file, defining the product's name and version. Any information not
+# specified will be taken from the CMake project(<project-name> VERSION
+# <dot-version>) call in the CMakeLists.txt in the parent directory to
+# the one containing this file.
+#
+# Recommended:
+#
+#>  parent <product-name>
+#
+# Deprecated (will produce a warning):
+#
+#>  parent <product-name> <product-ups-version> [<chain>]...
 
-# These optional lines define the installed directories where headers,
-# libraries, and executables will be found.
-# Use them only if your product does not conform to the defaults
-#
-# Format: directory_type directory_path directory_name
-#
-# The only recognized values of the first field are fcldir, gdmldir, incdir, libdir, and bindir
-# The only recognized values of the second field are product_dir, fq_dir, and -
-# The third field is not constrained.
-#
-# Defaults:
-# incdir  product_dir  include
-# fcldir  product_dir  fcl
-# libdir  fq_dir       lib
-# bindir  fq_dir       bin
-# gdmldir -
-# fwdir   -
-#
-incdir  product_dir  include
-libdir  fq_dir       lib
-bindir  fq_dir       bin
-gdmldir product_dir
-fcldir  product_dir fcl
-fwdir   product_dir scripts
+##################
+# chain[s]
+##################
+#
+# List the UPS chains ("-c", -t, "new," "current," "old...") to be defined
+# for the package. The trailing `s' is optional and without meaning.
+# Multiple chains may be specified with one or more declarations.
+#
+#>  chains <chain>...
 
-# With "product  version" table below, we now define dependencies
-# The version should be of the form vxx_yy_zz (e.g. v01_02_03)
-# Add the dependent product and version
+##################
+# defaultqual
+##################
+#
+# The default colon-delimited qualifier set used if one is not provided
+# to setup_for_development. Build type (debug, opt or prof) is optional.
+#
+# Deprecated - a qualifier should generally be provided to the
+# invocation of setup_for_development or setup_deps.
+#
+#>  defaultqual <qualifiers>
 
-product             version
+##################
+# noarch
+##################
+#
+# Specify this keyword if the package is architecture-independent. This
+# does not necessarily imply a lack of qualifiers or of a
+# fully-qualified (fq) subdirectory in the installed package.
+#
+#>  noarch
+
+##################
+# no_fq_dir
+##################
+#
+# Specify this keyword if the UPS package should not have a
+# fully-qualified (fq) subdirectory in the installed package. This does
+# not necessarily imply noarch or a lack of qualifiers, but caution
+# should be observed if using this keyword for architecture-dependent
+# packages or those with qualifiers to avoid overwritten files when
+# multiple different variants of the package are installed in the same
+# UPS area.
+#
+#>  no_fq_dir
+
+##################
+# define_pythonpath
+##################
+#
+# If define_pythonpath is enabled, the appropriate path will be appended
+# to PYTHONPATH.
+#
+#>  define_pythonpath
+####################################
+parent		sbncode
+defaultqual	e20
+####################################
+
+####################################
+# Directory specifications.
+#
+# These optional definitions specify the installed directories where
+# various files headers, libraries, and executables will be found. Some
+# have defaults; others must be specified if files of that type are to
+# be installed. Minimize configuration complexity by using only those
+# definitions necessary for the package.
+#
+##################
+# Notes:
+#
+# * Use directory specifications only if the defaults are inappropriate
+#   for your product.
+#
+# * A specification with defaults may be obviated by specifying a base
+#   of `-' as the only argument.
+#
+# * A directory will be created and appropriate UPS table file entries
+#   made *if and only if* files of that type are installed using the
+#   appropriate directive.
+#
+##################
+# Format:
+#
+#>  <spec>		<base>		[<subdir-name>]
+#
+# <base> may be `-' (negate defaults), "product_dir", or "fq_dir" as
+# desired.
+#
+# Available <spec>s and defaults:
+#
+#>  bindir		fq_dir		bin
+#
+#     Built binaries for public use.
+#
+#>  cmakemoduledir	product_dir	Modules
+#
+#     CMake modules.
+#
+#>  fcldir		product_dir	fcl
+#
+#     FHiCL framework configuration files.
+#
+#>  fwdir
+#
+#     Framework data.
+#
+#>  gdmldir		product_dir	gdml
+#
+#     GDML geometry description files.
+#
+#>  incdir		product_dir	include
+#
+#     Headers.
+#
+#>  libdir		fq_dir		lib
+#
+#     Compiled and other libraries.
+#
+#>  perllib		product_dir	perl5lib
+#
+#     Perl modules, etc.
+#
+#>  set_fwdir
+#
+#     An additional location for framework data to be added to
+#     FW_SEARCH_PATH; may be specified multiple times.
+#
+#>  set_wpdir
+#
+#     An additional location for wirecell data to be added to
+#     WIRECELL_PATH; may be specified multiple times.
+#
+#>  testdir		product_dir	test
+#
+#     Tests.
+#
+#>  wpdir
+#
+#     Wirecell data.
+#
+####################################
+bindir	fq_dir		bin
+fcldir	product_dir	fcl
+fwdir	product_dir	scripts
+gdmldir	product_dir
+incdir	product_dir	include
+libdir	fq_dir		lib
+####################################
+
+####################################
+# Product table.
+#
+# Table defining *all* direct UPS package dependencies.
+#
+##################
+# Format:
+#
+#>  product		version		qual	["<table_format=#>"]
+#>  <ups-product_name>	<ups-version>	[<qual-trigger>]	[<flag>]
+#>...
+#>  end_product_list
+#
+# <ups-version> may be a UPS version, a chain option (-c, -t, etc.) or a
+# chain name with a preceding `-'.
+#
+# Valid <qual-trigger> values:
+#
+# * [!]<single-qual>
+#
+#   A single qualifier whose presence in the parent's qualifier will
+#   trigger the setup of the specified version of the product. A prefix
+#   of `!' will negate the match.
+#
+# * <empty>|-
+#
+#   The specified version of the product will always be set up
+#   regardless of the parent's qualifiers. Use `-' as a placeholder if
+#   <flag> is to be specified.
+#
+# * -nq-
+#
+#   Specify explicitly that this product should be set up when the
+#   parent is unqualified.
+#
+# * -default-
+#
+#   The specified version of the product will be set up if no other
+#   product table entry for this product is applicable to the parent's
+#   qualifiers.
+#
+# Valid <flag> values:
+#
+# * only_for_build
+#
+#   The specified product will be set up for building only, and will not
+#   be added to the table file.
+#
+# * optional
+#
+#   It will not be an error if the specified product is not available to
+#   be set up.
+#
+##################
+# Notes.
+#
+# * Under older versions of the product table format ("<table_format=1>"
+#   or unspecified), -nq- had the same meaning as `-' above. When
+#   updating a product_deps file these entries should be reviewed when
+#   <table_format=2> is selected.
+#
+# * "<format>" is a valid alias for "<table_format>".
+#
+# * Under most circumstances (the parent is anything other than
+#   cetmodules), an entry for cetmodules is required.
+#
+# * It is an error for more than one non-(<qual-trigger> == "-default-")
+#   entry to match for a given product.
+#
+####################################
+product			version		qual	flags		<table_format=2>
+genie_xsec          v3_00_04a
 larsoft             v09_35_00
-sbnobj              v09_12_05
 sbnanaobj           v09_17_04
 sbndaq_artdaq_core  v1_00_00of0
-genie_xsec          v3_00_04a
-
-# list products required ONLY for the build
-# any products here must NOT have qualifiers
-cetbuildtools v8_18_05 - only_for_build
+sbnobj              v09_12_05
+cetmodules		v2_29_07	-	only_for_build
 end_product_list
+####################################
 
-# We now define allowed qualifiers and the corresponding qualifiers for the dependencies.
-# Make the table by adding columns before "notes".
-
-qualifier     larsoft     sbnobj     sbnanaobj  sbndaq_artdaq_core genie_xsec			notes
-e20:debug     e20:debug   e20:debug  e20:debug  e20:debug:s112     G1810a0211a:k250:e1000	-nq-	
-e20:prof      e20:prof    e20:prof   e20:prof   e20:prof:s112      G1810a0211a:k250:e1000   	-nq-	
-c7:debug      c7:debug    c7:debug   c7:debug   c7:debug:s112      G1810a0211a:k250:e1000	-nq-	
-c7:prof       c7:prof     c7:prof    c7:prof    c7:prof:s112       G1810a0211a:k250:e1000   	-nq-	
+####################################
+# Qualifier table.
+#
+# For each valid qualifer set of the parent, specify how dependencies
+# should be set up.
+#
+# Format:
+#
+#>  qualifier		<prod-spec>...	[<notes>]
+#>  <parent-qual>	<spec>...   [<text...>]
+#>...
+#>  end_qualifier_list
+#
+# <prod-spec> may be a product name or "compiler."
+#
+# <parent-qual> may be a colon-delimited qualifier set, or "-nq-" as a
+# column placeholder in the case of no parent qualifiers.
+#
+# Unless <prod-spec> is "compiler", <spec> may be a colon-delimited
+# qualifier set, or:
+#
+# * -
+#
+#   The dependency is not required for this <parent-qual> and will not
+#   be set up.
+#
+# * -nq-
+#
+#   The dependency will be set up without qualifiers.
+#
+# * -b- (deprecated)
+#
+#   A build-only dependency for this <parent-qual>. If the dependency is
+#   set up in this way, it will be set up without qualifiers. For more
+#   flexibility, use the product table to specify the only_for_build
+#   nature of the dependency and the qualifier table to specifiy how it
+#   should be set up.
+#
+# If <prod-spec> is "compiler", <spec> must be `-' (no compiler
+# required) or the name of the UPS product for the desired compiler. Any
+# qualifiers required to set up the compiler should be specified in the
+# appropriate column for that product.
+#
+##################
+# Notes.
+#
+# * A column for every product in the product table (see above) is
+#   *required* unless the only_for_build flag is specified, in which
+#   case it is optional.
+#
+####################################
+qualifier	larsoft		sbnobj		sbnanaobj	sbndaq_artdaq_core	genie_xsec		notes
+c7:debug	c7:debug	c7:debug	c7:debug	c7:s112:debug		e1000:G1810a0211a:k250	-nq-
+c7:prof		c7:prof		c7:prof		c7:prof		c7:s112:prof		e1000:G1810a0211a:k250	-nq-
+e20:debug	e20:debug	e20:debug	e20:debug	e20:s112:debug		e1000:G1810a0211a:k250	-nq-
+e20:prof	e20:prof	e20:prof	e20:prof	e20:s112:prof		e1000:G1810a0211a:k250	-nq-
 end_qualifier_list
+####################################
 
-# table fragment to set FW_SEARCH_PATH needed to find XML files:
+####################################
+# Table fragment.
+#
+####################################
 table_fragment_begin
     # currently, XML pandora files are installed in 'scripts':
     pathPrepend(FW_SEARCH_PATH, ${SBNCODE_DIR}/scripts)
 table_fragment_end
+####################################
+
+####################################
+# Backmatter.
+#
+# Comments and editor-specific metadata.
 
 # Preserve tabs and formatting in emacs and vi / vim:
 
-### Local Variables:OA
+### Local Variables:
+### mode: sh
 ### tab-width: 8
 ### End:
 
+# vi:set ts=8 noexpandtab:
diff --git a/ups/setup_for_development b/ups/setup_for_development
index 6bcccdd..b7026e2 100644
--- a/ups/setup_for_development
+++ b/ups/setup_for_development
@@ -1,90 +1,239 @@
-# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
+# This script is shell-agnostic, which involves much acrobatics to avoid
+# causing errors in one interpreter or another (*stares in csh*).
 #
-# There should be as little as possible here,
-# with most of the heavy lifting done by other small scripts
+# There should be as little as possible here, with most of the heavy
+# lifting done by other small scripts.
 #
 # When sourcing this file from a script, you may have to tell this
-# source file where it is via the fw_db shell (or env) variable.
-# I.e.:
+# source file where it is via the fw_db shell (or env) variable, i.e.
 #    set fw_db=/some/path; source /some/path/this_file
 # or  fw_db=/some/path; . /some/path/this_file
+#
+# Generated by cetmodules 2.29.07 at Wed Nov 03 18:34:25 CDT
+########################################################################
+
+########################################################################
+# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
+
+# Determine shell flavor.
+true && test $?shell = 1 && set _cetpkg_shell_flavor=csh || _cetpkg_shell_flavor=sh
+
+####################################
+# A common set of commands to use to hide as many shell flavor
+# differences as possible.
 
-test $?shell = 1 && set ss=csh || ss=sh
-#echo Shell type is $ss.
-
-# make some things similar. need to use set_ because sh builtin set would hide function set
-# Note: perhaps the trickiest thing in this file is the sh set_ function tries to return the same status
-#       as at the start of the function (which most likely is the result of a back-tick expression
-test "$ss" = csh && alias set_ set && alias vecho_ 'if ($?vv == 1) echo \!*' || eval 'vecho_() { test -n "${vv-}" && echo "$@"; return 0; }'
-test "$ss" =  sh && eval 'set_() { sts=$?;for xx in "$@";do var=`expr "$xx" : "\([^=]*\)"`;val=`expr "$xx" : "[^=]*=\(.*\)"`;eval "$var=\"$val\"";done;return $sts; }'
-test "$ss" =  sh && eval 'setenv() { export $1;eval "$1=\"\${2-}\""; }; source() { file=$1; shift; . $file "$@"; }; unsetenv_() { unset "$@"; }'
-test "$ss" =  sh && eval 'tnotnull() { eval "test -n \"\${$1-}\""; }'                             && eval 'nullout() { "$@" >/dev/null 2>&1; }'
-test "$ss" = csh && alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && alias nullout "\!* >& /dev/null" && alias unsetenv_ unsetenv
-test "$ss" = csh && alias return exit
-
-set_ msg1='ERROR: You MUST setup ups'
-test -z $UPS_DIR && ( echo ""; echo "$msg1"; echo "" ) && return
-
-set_ msg3='ERROR: You MUST specify either -o, -p, or -d'
-set_ msg4='Usage: setup_for_development <-d|-o|-p> <qualifier list>'
-test -z "$1" && ( echo ""; echo "$msg4"; echo "$msg3"; echo "" ) && return
-
-# make sure we know where this script lives
-# now if we were passed a path or if not, we can figure it out (maybe if we are interactive)
-#   bash, zsh, ksh and tcsh pass params to a source file, csh does not. but someone will be writing csh scripts
-set_ msg2='Please set shell or env. variable fw_db (to be the path to the framework source code). Fix this and other errors may go away.'
-tnotnull fw_db && set_ db=`sh -c "cd $fw_db >/dev/null 2>&1 && pwd"` && vecho_ 'setting db from fw_db variable' || set_ db=
-
-test -z "$db" && tnotnull BASH_SOURCE && set_ me=`dirname $BASH_SOURCE` && set_ db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via BASH_SOURCE'
-
-# history is applicable only for interactive t/csh
-test -z "$db" -a "$ss" = csh && test $?history = 0 && set history=5  # make sure history 1 works
-test -z "$db" -a "$ss" = csh && set me=`history 1|sed 's/^[     0-9:]*//'` && test -n "$me" && set me=`dirname $me[2]` \
-    && set db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via interactive history'
-#echo This script lives in $db
-
-test -z "$db" && echo "$msg2" || vecho_ "db=$db"
-test -n "$db" && setenv CETPKG_SOURCE `dirname $db`
-
-# make sure we know the current directory
-setenv CETPKG_BUILD `pwd`
-#echo Build directory is $CETPKG_BUILD
-
-echo The working build directory is $CETPKG_BUILD
-echo The source code directory is $CETPKG_SOURCE
-
-set_ msg5='ERROR: setup of required products has failed'
-
-echo ----------- check this block for errors -----------------------
-set_ setup_fail="false"
-set_ cetb=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $2 }' `
-set_ cetv=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $3 }' `
-#echo Found $cetb $cetv
-setup -B $cetb $cetv
-test "$?" = 0 || set_ setup_fail="true"
-setenv UPS_OVERRIDE -B
-# now get the rest of the products
-set_ cmd="$CETBUILDTOOLS_DIR/bin/set_dev_products $CETPKG_SOURCE $CETPKG_BUILD $*"
-#echo Ready to run $cmd
-source `$cmd`
-#echo "$cmd returned $setup_fail"
-test "$setup_fail" = "true" && echo "$msg5"
-test "$setup_fail" = "true" && return 1
-test -e "$CETPKG_BUILD/diag_report" && cat $CETPKG_BUILD/diag_report
-echo ----------------------------------------------------------------
-
-# add lib to LD_LIBRARY_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_lib
-# add bin to path
-source $CETBUILDTOOLS_DIR/bin/set_dev_bin
-# set FW_SEARCH_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_fwsearch
-
-# final sanity check and report
-source $CETBUILDTOOLS_DIR/bin/set_dev_check_report
-
-# cleanup before exiting
-test "$ss" = csh && unalias tnotnull nullout set_ vecho_ return
-unset ss db me thisdir msg1 msg2 msg3 msg4 msg5 setup_fail
-unset set_ setenv unsetenv_ tnotnull nullout vecho_
+##################
+# IMPORTANT NOTE:
+#
+# Following extensive tests in multiple shells, I have reached the
+# conclusion that it is not actually possible for a function to mirror
+# the semantics of an assignment with respect to the status code of ``
+# and compound statements joined with "||" or "&&". To handle this, we
+# write a large chunk of shell code to a temporary file in the current
+# directory a.k.a. CETPKG_BUILD with shell variable assignments correct
+# according to the shell flavor, and then source it. This also allows us
+# to deal with the fact that some shells don't pass arguments to sourced
+# scripts *stares harder in csh*.
+#
+# 2020-06-24 CHG.
+##################
+
+# If we're C-flavored, set up the commands using alias.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_nobuild="" && \
+  set _cetpkg_shell_var_set=set\\1 && \
+  alias vecho_ 'if ($?vv == 1) echo \>\> \!*' && \
+  alias unsetenv_ unsetenv && \
+  alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && \
+  alias nullout "\!* >& /dev/null" && \
+  alias __TOP_EOF__ '' && \
+  alias return exit
+
+# For Bourne-flavored shells, use functions.
+test "$_cetpkg_shell_flavor" = sh && \
+  _cetpkg_nobuild="" && \
+  _cetpkg_shell_var_set= && \
+  eval 'vecho_() { test -n "${vv-}" && echo ">> $*"; return 0; }' && \
+  eval 'setenv() { eval "$1=\"\${2-}\"; export $1"; }' && \
+  eval 'unsetenv_() { unset "$@"; }' && \
+  eval 'source() { . "$@"; }' && \
+  eval 'tnotnull() { eval "test -n \"\${$1-}\""; }' && \
+  eval 'nullout() { "$@" >/dev/null 2>&1; }'
+####################################
+
+##################
+# Check for UPS (uses alias for return in C-flavored shells).
+test -z "$UPS_DIR" && \
+  ( echo ""; echo "ERROR: you MUST set up UPS"; echo "" ) && \
+  return 1 || true
+##################
+
+####################################
+# Need to find ourselves to set CETPKG_SOURCE.
+
+# Define empty variables for C-flavor shells to make things easier.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_fw_db= _cetpkg_myself= _cetpkg_mydir=
+
+# If user has set fw_db, identify our top-level source directory now.
+test "$_cetpkg_shell_flavor" = csh && tnotnull fw_db && \
+  set _cetpkg_fw_db=`sh -c "cd $fw_db:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull fw_db && \
+  _cetpkg_fw_db=`sh -c "cd \"$fw_db\" >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+
+##################
+# For Bash and zsh, identify ourselves now so we don't have to go
+# through acrobatics later in the sourced script.
+test "$_cetpkg_shell_flavor" = sh && tnotnull BASH_SOURCE && \
+  _cetpkg_myself="$BASH_SOURCE" && test -n "$BASH_SOURCE" && \
+  vecho_ "found ourselves through BASH_SOURCE" || true
+test "$_cetpkg_shell_flavor" = sh -a -z "$_cetpkg_myself" && \
+  tnotnull ZSH_VERSION && eval '_cetpkg_myself="${(%):-%x}"' && \
+  test -n "$_cetpkg_myself" && \
+  vecho_ "found ourselves through ZSH prompt logic" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull _cetpkg_myself && \
+  _cetpkg_mydir=`dirname "$_cetpkg_myself"` && \
+  _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir >/dev/null 2>&1 && /bin/pwd -P"` || true
+##################
+
+##################
+# History is applicable only for interactive t/csh.
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh -a $?history = 0 && \
+  set history=5  || true
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_mydir=`history 1|sed -Ee 's/^[[:space:][:digit:]:]*.*\bsource[[:space:]]+//'` && \
+  test -n "$_cetpkg_mydir" && set _cetpkg_mydir=`dirname $_cetpkg_mydir[1]:q` && \
+  set _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ 'setting db via interactive history' || true
+##################
+
+# Set CETPKG_SOURCE.
+test -n "$_cetpkg_fw_db" && \
+  vecho_ "_cetpkg_fw_db=$_cetpkg_fw_db" && \
+  setenv CETPKG_SOURCE `dirname $_cetpkg_fw_db` || \
+  printf "WARNING: please set shell or env. variable fw_db (to be the path to the\n\
+         framework source code). Fix this and other errors may go away.\n"
+####################################
+
+##################
+# Set CETPKG_BUILD.
+setenv CETPKG_BUILD `/bin/pwd -P`
+##################
+
+########################################################################
+# Write the rest of ourselves to a file and source it to handle status
+# code semantics for variable assignments.
+#
+# Note that even here we have to play a trick or two due to the fact
+# that we have to deal with the difference in the way sh- and csh-flavor
+# shells handle a quoted delimiter word for a HERE document: the latter
+# expect the delimiter to include the quoting; the former do not. This
+# is the reason for the C-flavored __TOP_EOF__ alias, and the explicit
+# return at the end of the sourced script.
+#
+########################################################################
+
+sed -Ee 's&\b__SET__([[:space:]]+)&'$_cetpkg_shell_var_set'&g' \
+  -e 's&__SETUP_ARGS__&'"$*"'&g' \
+  > ./setup_common.$_cetpkg_shell_flavor <<\__TOP_EOF__
+########################################################################
 
+####################################
+# Personality check: are we setup_deps or setup_for_development?
+#
+# If we're sourcing setup.in directly (e.g. for cetmodules itself) then
+# we select "setup_for_development" behavior, otherwise _cetpkg_nobuild
+# will be set appropriately by CMake's CONFIGURE() command for
+# setup_for_development or setup_deps.
+
+test -z "$_cetpkg_nobuild" -o "$_cetpkg_nobuild" = "--nobuild" || \
+  __SET__ _cetpkg_nobuild="" || true
+####################################
+
+####################################
+# Initial info.
+
+printf "\n";
+test -z "$_cetpkg_nobuild" && \
+  echo "The working build directory is $CETPKG_BUILD" || true
+cat <<EOF
+The source code directory is $CETPKG_SOURCE
+
+---------------------- check this block for errors ---------------------
+EOF
+
+__SET__ _cetpkg_status=""
+####################################
+
+####################################
+# Attempt to find a suitable cetmodules to set up.
+
+__SET__ _cetpkg_cetmsetup=`sed -nE 's&^[[:space:]]*(cetmodules)[[:space:]]+([^[:space:]]+).*\bonly_for_build\b.*$&\1 \2&p' "$CETPKG_SOURCE/ups/product_deps"`
+test -z "_cetpkg_cetmsetup" -a ! -x "$CETPKG_SOURCE/libexec/set_dev_products" && \
+  __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to find suitable cetmodules >= 2.00.00" || true
+test -n "$_cetpkg_status" -o -z "$_cetpkg_cetmsetup" || setup -B $_cetpkg_cetmsetup
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of $_cetpkg_cetmsetup has failed" || true
+test -z "$_cetpkg_status$_cetpkg_cetmsetup" && setenv PATH `dropit -sfe "$CETPKG_SOURCE/bin"` && __SET__ _cetpkg_cettop="$CETPKG_SOURCE" || true
+test -z "$_cetpkg_status$_cetpkg_cettop" -a -n "$CETMODULES_DIR" && __SET__ _cetpkg_cettop="$CETMODULES_DIR"
+####################################
+
+####################################
+# Generate the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || \
+  __SET__ _cetpkg_setup="`${_cetpkg_cettop}/libexec/set_dev_products $_cetpkg_nobuild __SETUP_ARGS__`"
+test $? != 0 -o -z "$_cetpkg_setup" && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: generation of setup script has failed" || true
+####################################
+
+####################################
+# Source the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || source "$_cetpkg_setup"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of required products has failed" || true
+__SET__ _cetpkg_setup_errlog="$CETPKG_BUILD/cetpkg_setup.err"
+test -s "$_cetpkg_setup_errlog" && cat "$_cetpkg_setup_errlog" || \
+  rm -f "$_cetpkg_setup_errlog"
+####################################
+
+cat <<EOF
+------------------------------------------------------------------------
+
+EOF
+
+# Final sanity check and report.
+test -n "$_cetpkg_status" -o -n "$_cetpkg_nobuild" || \
+  "$_cetpkg_cettop/libexec/verify_build_environment" "$CETPKG_BUILD"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to verify build environment" || true
+
+####################################
+# Clean up before exiting.
+
+# Clean up C-flavor aliases and prepare to return^H^H^H^H^H^Hexit.
+test "$_cetpkg_shell_flavor" = csh && \
+  unalias vecho_ unsetenv_ tnotnull nullout __TOP_EOF__ return && \
+  set return=exit || return=return
+
+# Finish cleanup and exit. Note the use of eval so we can unset
+# everything including $return and $_cetpkg_status.
+eval "unset vecho_ setenv unsetenv_ source tnotnull nullout "\
+"_cetpkg_nobuild _cetpkg_shell_var_set "\
+"_cetpkg_fw_db _cetpkg_myself _cetpkg_mydir _cetpkg_cetmsetup "\
+"_cetpkg_cettop _cetpkg_setup _cetpkg_setup_errlog "\
+"_cetpkg_shell_flavor return _cetpkg_status; \
+$return $_cetpkg_status"
+####################################
+
+########################################################################
+\__TOP_EOF__
+__TOP_EOF__
+
+source ./setup_common.$_cetpkg_shell_flavor
